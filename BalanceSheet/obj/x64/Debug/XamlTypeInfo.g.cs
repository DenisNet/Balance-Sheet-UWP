//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace BalanceSheet
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace BalanceSheet.BalanceSheet_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[157];
            _typeNameTable[0] = "BalanceSheet.Controls.Chart.ChartConverter";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "BalanceSheet.Controls.Chart.ColorConverter";
            _typeNameTable[3] = "Syncfusion.UI.Xaml.Charts.SfChart";
            _typeNameTable[4] = "Syncfusion.UI.Xaml.Charts.ChartBase";
            _typeNameTable[5] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[6] = "Syncfusion.UI.Xaml.Charts.ChartSeriesCollection";
            _typeNameTable[7] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartSeries>";
            _typeNameTable[8] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartSeries>";
            _typeNameTable[9] = "Syncfusion.UI.Xaml.Charts.ChartSeries";
            _typeNameTable[10] = "Syncfusion.UI.Xaml.Charts.ChartSeriesBase";
            _typeNameTable[11] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[12] = "Double";
            _typeNameTable[13] = "Int32";
            _typeNameTable[14] = "Boolean";
            _typeNameTable[15] = "Syncfusion.UI.Xaml.Charts.Direction";
            _typeNameTable[16] = "System.Enum";
            _typeNameTable[17] = "System.ValueType";
            _typeNameTable[18] = "Syncfusion.UI.Xaml.Charts.SortingAxis";
            _typeNameTable[19] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[20] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAdornment>";
            _typeNameTable[21] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAdornment>";
            _typeNameTable[22] = "Syncfusion.UI.Xaml.Charts.ChartAdornment";
            _typeNameTable[23] = "Syncfusion.UI.Xaml.Charts.ChartSegment";
            _typeNameTable[24] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[25] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[26] = "Windows.UI.Xaml.Media.FontFamily";
            _typeNameTable[27] = "Windows.UI.Text.FontStyle";
            _typeNameTable[28] = "Syncfusion.UI.Xaml.Charts.DoubleRange";
            _typeNameTable[29] = "Windows.UI.Xaml.Media.DoubleCollection";
            _typeNameTable[30] = "Syncfusion.UI.Xaml.Charts.ChartColorPalette";
            _typeNameTable[31] = "System.Collections.IEnumerable";
            _typeNameTable[32] = "String";
            _typeNameTable[33] = "Syncfusion.UI.Xaml.Charts.ChartLegendIcon";
            _typeNameTable[34] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[35] = "Syncfusion.UI.Xaml.Charts.ChartColorModel";
            _typeNameTable[36] = "TimeSpan";
            _typeNameTable[37] = "Syncfusion.UI.Xaml.Charts.EmptyPointValue";
            _typeNameTable[38] = "Syncfusion.UI.Xaml.Charts.EmptyPointStyle";
            _typeNameTable[39] = "Syncfusion.UI.Xaml.Charts.ChartAxisBase2D";
            _typeNameTable[40] = "Syncfusion.UI.Xaml.Charts.ChartAxis";
            _typeNameTable[41] = "Syncfusion.UI.Xaml.Charts.RangeAxisBase";
            _typeNameTable[42] = "Syncfusion.UI.Xaml.Charts.Watermark";
            _typeNameTable[43] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[44] = "Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection";
            _typeNameTable[45] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartBehavior>";
            _typeNameTable[46] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartBehavior>";
            _typeNameTable[47] = "Syncfusion.UI.Xaml.Charts.ChartBehavior";
            _typeNameTable[48] = "Windows.UI.Xaml.Controls.Canvas";
            _typeNameTable[49] = "Syncfusion.UI.Xaml.Charts.AnnotationCollection";
            _typeNameTable[50] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.Annotation>";
            _typeNameTable[51] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.Annotation>";
            _typeNameTable[52] = "Syncfusion.UI.Xaml.Charts.Annotation";
            _typeNameTable[53] = "Windows.UI.Xaml.FrameworkElement";
            _typeNameTable[54] = "Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement";
            _typeNameTable[55] = "Syncfusion.UI.Xaml.Charts.CoordinateUnit";
            _typeNameTable[56] = "Windows.UI.Text.FontStretch";
            _typeNameTable[57] = "Windows.UI.Text.FontWeight";
            _typeNameTable[58] = "Windows.Foundation.Rect";
            _typeNameTable[59] = "Syncfusion.UI.Xaml.Charts.ChartVisibleSeriesCollection";
            _typeNameTable[60] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartSeriesBase>";
            _typeNameTable[61] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartSeriesBase>";
            _typeNameTable[62] = "Syncfusion.UI.Xaml.Charts.ChartColumnDefinitions";
            _typeNameTable[63] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>";
            _typeNameTable[64] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>";
            _typeNameTable[65] = "Syncfusion.UI.Xaml.Charts.ChartColumnDefinition";
            _typeNameTable[66] = "Syncfusion.UI.Xaml.Charts.ChartUnitType";
            _typeNameTable[67] = "Syncfusion.UI.Xaml.Charts.ChartRowDefinitions";
            _typeNameTable[68] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartRowDefinition>";
            _typeNameTable[69] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartRowDefinition>";
            _typeNameTable[70] = "Syncfusion.UI.Xaml.Charts.ChartRowDefinition";
            _typeNameTable[71] = "Syncfusion.UI.Xaml.Charts.ChartAxisCollection";
            _typeNameTable[72] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>";
            _typeNameTable[73] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>";
            _typeNameTable[74] = "Syncfusion.UI.Xaml.Charts.AxisHeaderPosition";
            _typeNameTable[75] = "Syncfusion.UI.Xaml.Charts.AxisElementPosition";
            _typeNameTable[76] = "Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction";
            _typeNameTable[77] = "Windows.UI.Xaml.Style";
            _typeNameTable[78] = "Syncfusion.UI.Xaml.Charts.LabelStyle";
            _typeNameTable[79] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxisLabel>";
            _typeNameTable[80] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxisLabel>";
            _typeNameTable[81] = "Syncfusion.UI.Xaml.Charts.ChartAxisLabel";
            _typeNameTable[82] = "Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode";
            _typeNameTable[83] = "Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode";
            _typeNameTable[84] = "Syncfusion.UI.Xaml.Charts.ChartAxisLabelCollection";
            _typeNameTable[85] = "Windows.UI.Xaml.HorizontalAlignment";
            _typeNameTable[86] = "Windows.UI.Xaml.VerticalAlignment";
            _typeNameTable[87] = "Windows.UI.Xaml.UIElement";
            _typeNameTable[88] = "Syncfusion.UI.Xaml.Charts.PieSeries";
            _typeNameTable[89] = "Syncfusion.UI.Xaml.Charts.CircularSeriesBase";
            _typeNameTable[90] = "Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase";
            _typeNameTable[91] = "Syncfusion.UI.Xaml.Charts.AdornmentSeries";
            _typeNameTable[92] = "Syncfusion.UI.Xaml.Charts.ConnectorMode";
            _typeNameTable[93] = "Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition";
            _typeNameTable[94] = "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo";
            _typeNameTable[95] = "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase";
            _typeNameTable[96] = "Syncfusion.UI.Xaml.Charts.PieSegment";
            _typeNameTable[97] = "Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition";
            _typeNameTable[98] = "Syncfusion.UI.Xaml.Charts.ChartSymbol";
            _typeNameTable[99] = "Syncfusion.UI.Xaml.Charts.AdornmentsPosition";
            _typeNameTable[100] = "Syncfusion.UI.Xaml.Charts.LabelContent";
            _typeNameTable[101] = "System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>";
            _typeNameTable[102] = "BalanceSheet.Controls.Chart.ChartsModelDaten";
            _typeNameTable[103] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[104] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[105] = "BalanceSheet.Controls.Chart.PivotChart.ColorConverter";
            _typeNameTable[106] = "Syncfusion.UI.Xaml.Charts.ChartLegend";
            _typeNameTable[107] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[108] = "Syncfusion.UI.Xaml.Charts.LegendPosition";
            _typeNameTable[109] = "Syncfusion.UI.Xaml.Charts.ChartOrientation";
            _typeNameTable[110] = "Syncfusion.UI.Xaml.Charts.ChartDock";
            _typeNameTable[111] = "Windows.UI.Xaml.CornerRadius";
            _typeNameTable[112] = "WinRTXamlToolkit.Controls.WrapPanel";
            _typeNameTable[113] = "Windows.UI.Xaml.Controls.Panel";
            _typeNameTable[114] = "Windows.UI.Xaml.Controls.Orientation";
            _typeNameTable[115] = "Syncfusion.UI.Xaml.Charts.ChartTooltip";
            _typeNameTable[116] = "BalanceSheet.Controls.Chart.PivotChart.PivotChartModelDaten";
            _typeNameTable[117] = "BalanceSheet.Controls.MyControl";
            _typeNameTable[118] = "BalanceSheet.Controls.PageHeader";
            _typeNameTable[119] = "Windows.UI.Color";
            _typeNameTable[120] = "Byte";
            _typeNameTable[121] = "BalanceSheet.ContractModelConverterExtensions.DatePickerConverter";
            _typeNameTable[122] = "BalanceSheet.Views.Calendar";
            _typeNameTable[123] = "BalanceSheet.Views.HelpPage";
            _typeNameTable[124] = "BalanceSheet.ValueConverters.NullToVisibilityConverter";
            _typeNameTable[125] = "BalanceSheet.Controls.NavMenuListView";
            _typeNameTable[126] = "Windows.UI.Xaml.Controls.ListView";
            _typeNameTable[127] = "BalanceSheet.Views.AppShell";
            _typeNameTable[128] = "Windows.UI.Xaml.Controls.Frame";
            _typeNameTable[129] = "BalanceSheet.Views.CalendarPage";
            _typeNameTable[130] = "BalanceSheet.Views.BasePage";
            _typeNameTable[131] = "BalanceSheet.Views.HomePage_Mobile";
            _typeNameTable[132] = "BalanceSheet.Views.Mobile.AddPage_Mobile";
            _typeNameTable[133] = "BalanceSheet.Views.Mobile.CalendarPage_Mobile";
            _typeNameTable[134] = "BalanceSheet.Views.Mobile.CostsIncomes.Auto";
            _typeNameTable[135] = "BalanceSheet.Views.Mobile.CostsIncomes.FixKosten";
            _typeNameTable[136] = "BalanceSheet.Views.Mobile.CostsIncomes.Incomes";
            _typeNameTable[137] = "BalanceSheet.Views.Mobile.CostsIncomes.Lebensmittel";
            _typeNameTable[138] = "BalanceSheet.Views.Mobile.CostsIncomes.Personal";
            _typeNameTable[139] = "BalanceSheet.Views.Mobile.CostsIncomes.SaveResult";
            _typeNameTable[140] = "BalanceSheet.Views.Mobile.CostsIncomes.Unterhaltung";
            _typeNameTable[141] = "BalanceSheet.Views.Mobile.CostsIncomes.Verkehr";
            _typeNameTable[142] = "BalanceSheet.Views.Mobile.IntervalDatum";
            _typeNameTable[143] = "BalanceSheet.Views.Mobile.ReportPage_Mobile";
            _typeNameTable[144] = "BalanceSheet.Views.Mobile.Statistik_Mobile";
            _typeNameTable[145] = "BalanceSheet.Views.ProfilePage";
            _typeNameTable[146] = "BalanceSheet.Views.ReportPage";
            _typeNameTable[147] = "BalanceSheet.ValueConverters.BooleanToVisibilityConverter";
            _typeNameTable[148] = "BalanceSheet.Views.SettingsPage";
            _typeNameTable[149] = "BalanceSheet.ValueConverters.AuthProviderToStringConverter";
            _typeNameTable[150] = "BalanceSheet.Views.SignInPage";
            _typeNameTable[151] = "BalanceSheet.ViewModels.SignInViewModel";
            _typeNameTable[152] = "BalanceSheet.ViewModels.ViewModelBase";
            _typeNameTable[153] = "BalanceSheet.ComponentModel.ObservableObjectBase";
            _typeNameTable[154] = "BalanceSheet.Views.StatisticPage";
            _typeNameTable[155] = "BalanceSheet.ValueConverters.SelectedLegendItemToColorConverter";
            _typeNameTable[156] = "BalanceSheet.Views.WelcomePage";

            _typeTable = new global::System.Type[157];
            _typeTable[0] = typeof(global::BalanceSheet.Controls.Chart.ChartConverter);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::BalanceSheet.Controls.Chart.ColorConverter);
            _typeTable[3] = typeof(global::Syncfusion.UI.Xaml.Charts.SfChart);
            _typeTable[4] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartBase);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[6] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSeriesCollection);
            _typeTable[7] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartSeries>);
            _typeTable[8] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartSeries>);
            _typeTable[9] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSeries);
            _typeTable[10] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase);
            _typeTable[11] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[12] = typeof(global::System.Double);
            _typeTable[13] = typeof(global::System.Int32);
            _typeTable[14] = typeof(global::System.Boolean);
            _typeTable[15] = typeof(global::Syncfusion.UI.Xaml.Charts.Direction);
            _typeTable[16] = typeof(global::System.Enum);
            _typeTable[17] = typeof(global::System.ValueType);
            _typeTable[18] = typeof(global::Syncfusion.UI.Xaml.Charts.SortingAxis);
            _typeTable[19] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[20] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAdornment>);
            _typeTable[21] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAdornment>);
            _typeTable[22] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAdornment);
            _typeTable[23] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSegment);
            _typeTable[24] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[25] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[26] = typeof(global::Windows.UI.Xaml.Media.FontFamily);
            _typeTable[27] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[28] = typeof(global::Syncfusion.UI.Xaml.Charts.DoubleRange);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.Media.DoubleCollection);
            _typeTable[30] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartColorPalette);
            _typeTable[31] = typeof(global::System.Collections.IEnumerable);
            _typeTable[32] = typeof(global::System.String);
            _typeTable[33] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon);
            _typeTable[34] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[35] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartColorModel);
            _typeTable[36] = typeof(global::System.TimeSpan);
            _typeTable[37] = typeof(global::Syncfusion.UI.Xaml.Charts.EmptyPointValue);
            _typeTable[38] = typeof(global::Syncfusion.UI.Xaml.Charts.EmptyPointStyle);
            _typeTable[39] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxisBase2D);
            _typeTable[40] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxis);
            _typeTable[41] = typeof(global::Syncfusion.UI.Xaml.Charts.RangeAxisBase);
            _typeTable[42] = typeof(global::Syncfusion.UI.Xaml.Charts.Watermark);
            _typeTable[43] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[44] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection);
            _typeTable[45] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartBehavior>);
            _typeTable[46] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartBehavior>);
            _typeTable[47] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartBehavior);
            _typeTable[48] = typeof(global::Windows.UI.Xaml.Controls.Canvas);
            _typeTable[49] = typeof(global::Syncfusion.UI.Xaml.Charts.AnnotationCollection);
            _typeTable[50] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.Annotation>);
            _typeTable[51] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.Annotation>);
            _typeTable[52] = typeof(global::Syncfusion.UI.Xaml.Charts.Annotation);
            _typeTable[53] = typeof(global::Windows.UI.Xaml.FrameworkElement);
            _typeTable[54] = typeof(global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement);
            _typeTable[55] = typeof(global::Syncfusion.UI.Xaml.Charts.CoordinateUnit);
            _typeTable[56] = typeof(global::Windows.UI.Text.FontStretch);
            _typeTable[57] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[58] = typeof(global::Windows.Foundation.Rect);
            _typeTable[59] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartVisibleSeriesCollection);
            _typeTable[60] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase>);
            _typeTable[61] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase>);
            _typeTable[62] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinitions);
            _typeTable[63] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>);
            _typeTable[64] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>);
            _typeTable[65] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition);
            _typeTable[66] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartUnitType);
            _typeTable[67] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartRowDefinitions);
            _typeTable[68] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition>);
            _typeTable[69] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition>);
            _typeTable[70] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition);
            _typeTable[71] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxisCollection);
            _typeTable[72] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>);
            _typeTable[73] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>);
            _typeTable[74] = typeof(global::Syncfusion.UI.Xaml.Charts.AxisHeaderPosition);
            _typeTable[75] = typeof(global::Syncfusion.UI.Xaml.Charts.AxisElementPosition);
            _typeTable[76] = typeof(global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction);
            _typeTable[77] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[78] = typeof(global::Syncfusion.UI.Xaml.Charts.LabelStyle);
            _typeTable[79] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel>);
            _typeTable[80] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel>);
            _typeTable[81] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel);
            _typeTable[82] = typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode);
            _typeTable[83] = typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode);
            _typeTable[84] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxisLabelCollection);
            _typeTable[85] = typeof(global::Windows.UI.Xaml.HorizontalAlignment);
            _typeTable[86] = typeof(global::Windows.UI.Xaml.VerticalAlignment);
            _typeTable[87] = typeof(global::Windows.UI.Xaml.UIElement);
            _typeTable[88] = typeof(global::Syncfusion.UI.Xaml.Charts.PieSeries);
            _typeTable[89] = typeof(global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase);
            _typeTable[90] = typeof(global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase);
            _typeTable[91] = typeof(global::Syncfusion.UI.Xaml.Charts.AdornmentSeries);
            _typeTable[92] = typeof(global::Syncfusion.UI.Xaml.Charts.ConnectorMode);
            _typeTable[93] = typeof(global::Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition);
            _typeTable[94] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo);
            _typeTable[95] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase);
            _typeTable[96] = typeof(global::Syncfusion.UI.Xaml.Charts.PieSegment);
            _typeTable[97] = typeof(global::Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition);
            _typeTable[98] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSymbol);
            _typeTable[99] = typeof(global::Syncfusion.UI.Xaml.Charts.AdornmentsPosition);
            _typeTable[100] = typeof(global::Syncfusion.UI.Xaml.Charts.LabelContent);
            _typeTable[101] = typeof(global::System.Collections.Generic.List<global::Windows.UI.Xaml.Media.Brush>);
            _typeTable[102] = typeof(global::BalanceSheet.Controls.Chart.ChartsModelDaten);
            _typeTable[103] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[104] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[105] = typeof(global::BalanceSheet.Controls.Chart.PivotChart.ColorConverter);
            _typeTable[106] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegend);
            _typeTable[107] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[108] = typeof(global::Syncfusion.UI.Xaml.Charts.LegendPosition);
            _typeTable[109] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartOrientation);
            _typeTable[110] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartDock);
            _typeTable[111] = typeof(global::Windows.UI.Xaml.CornerRadius);
            _typeTable[112] = typeof(global::WinRTXamlToolkit.Controls.WrapPanel);
            _typeTable[113] = typeof(global::Windows.UI.Xaml.Controls.Panel);
            _typeTable[114] = typeof(global::Windows.UI.Xaml.Controls.Orientation);
            _typeTable[115] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartTooltip);
            _typeTable[116] = typeof(global::BalanceSheet.Controls.Chart.PivotChart.PivotChartModelDaten);
            _typeTable[117] = typeof(global::BalanceSheet.Controls.MyControl);
            _typeTable[118] = typeof(global::BalanceSheet.Controls.PageHeader);
            _typeTable[119] = typeof(global::Windows.UI.Color);
            _typeTable[120] = typeof(global::System.Byte);
            _typeTable[121] = typeof(global::BalanceSheet.ContractModelConverterExtensions.DatePickerConverter);
            _typeTable[122] = typeof(global::BalanceSheet.Views.Calendar);
            _typeTable[123] = typeof(global::BalanceSheet.Views.HelpPage);
            _typeTable[124] = typeof(global::BalanceSheet.ValueConverters.NullToVisibilityConverter);
            _typeTable[125] = typeof(global::BalanceSheet.Controls.NavMenuListView);
            _typeTable[126] = typeof(global::Windows.UI.Xaml.Controls.ListView);
            _typeTable[127] = typeof(global::BalanceSheet.Views.AppShell);
            _typeTable[128] = typeof(global::Windows.UI.Xaml.Controls.Frame);
            _typeTable[129] = typeof(global::BalanceSheet.Views.CalendarPage);
            _typeTable[130] = typeof(global::BalanceSheet.Views.BasePage);
            _typeTable[131] = typeof(global::BalanceSheet.Views.HomePage_Mobile);
            _typeTable[132] = typeof(global::BalanceSheet.Views.Mobile.AddPage_Mobile);
            _typeTable[133] = typeof(global::BalanceSheet.Views.Mobile.CalendarPage_Mobile);
            _typeTable[134] = typeof(global::BalanceSheet.Views.Mobile.CostsIncomes.Auto);
            _typeTable[135] = typeof(global::BalanceSheet.Views.Mobile.CostsIncomes.FixKosten);
            _typeTable[136] = typeof(global::BalanceSheet.Views.Mobile.CostsIncomes.Incomes);
            _typeTable[137] = typeof(global::BalanceSheet.Views.Mobile.CostsIncomes.Lebensmittel);
            _typeTable[138] = typeof(global::BalanceSheet.Views.Mobile.CostsIncomes.Personal);
            _typeTable[139] = typeof(global::BalanceSheet.Views.Mobile.CostsIncomes.SaveResult);
            _typeTable[140] = typeof(global::BalanceSheet.Views.Mobile.CostsIncomes.Unterhaltung);
            _typeTable[141] = typeof(global::BalanceSheet.Views.Mobile.CostsIncomes.Verkehr);
            _typeTable[142] = typeof(global::BalanceSheet.Views.Mobile.IntervalDatum);
            _typeTable[143] = typeof(global::BalanceSheet.Views.Mobile.ReportPage_Mobile);
            _typeTable[144] = typeof(global::BalanceSheet.Views.Mobile.Statistik_Mobile);
            _typeTable[145] = typeof(global::BalanceSheet.Views.ProfilePage);
            _typeTable[146] = typeof(global::BalanceSheet.Views.ReportPage);
            _typeTable[147] = typeof(global::BalanceSheet.ValueConverters.BooleanToVisibilityConverter);
            _typeTable[148] = typeof(global::BalanceSheet.Views.SettingsPage);
            _typeTable[149] = typeof(global::BalanceSheet.ValueConverters.AuthProviderToStringConverter);
            _typeTable[150] = typeof(global::BalanceSheet.Views.SignInPage);
            _typeTable[151] = typeof(global::BalanceSheet.ViewModels.SignInViewModel);
            _typeTable[152] = typeof(global::BalanceSheet.ViewModels.ViewModelBase);
            _typeTable[153] = typeof(global::BalanceSheet.ComponentModel.ObservableObjectBase);
            _typeTable[154] = typeof(global::BalanceSheet.Views.StatisticPage);
            _typeTable[155] = typeof(global::BalanceSheet.ValueConverters.SelectedLegendItemToColorConverter);
            _typeTable[156] = typeof(global::BalanceSheet.Views.WelcomePage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_ChartConverter() { return new global::BalanceSheet.Controls.Chart.ChartConverter(); }
        private object Activate_2_ColorConverter() { return new global::BalanceSheet.Controls.Chart.ColorConverter(); }
        private object Activate_3_SfChart() { return new global::Syncfusion.UI.Xaml.Charts.SfChart(); }
        private object Activate_6_ChartSeriesCollection() { return new global::Syncfusion.UI.Xaml.Charts.ChartSeriesCollection(); }
        private object Activate_7_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartSeries>(); }
        private object Activate_8_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartSeries>(); }
        private object Activate_20_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAdornment>(); }
        private object Activate_21_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAdornment>(); }
        private object Activate_22_ChartAdornment() { return new global::Syncfusion.UI.Xaml.Charts.ChartAdornment(); }
        private object Activate_35_ChartColorModel() { return new global::Syncfusion.UI.Xaml.Charts.ChartColorModel(); }
        private object Activate_42_Watermark() { return new global::Syncfusion.UI.Xaml.Charts.Watermark(); }
        private object Activate_44_ChartBehaviorsCollection() { return new global::Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection(); }
        private object Activate_45_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartBehavior>(); }
        private object Activate_46_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartBehavior>(); }
        private object Activate_49_AnnotationCollection() { return new global::Syncfusion.UI.Xaml.Charts.AnnotationCollection(); }
        private object Activate_50_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.Annotation>(); }
        private object Activate_51_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.Annotation>(); }
        private object Activate_59_ChartVisibleSeriesCollection() { return new global::Syncfusion.UI.Xaml.Charts.ChartVisibleSeriesCollection(); }
        private object Activate_60_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase>(); }
        private object Activate_61_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase>(); }
        private object Activate_62_ChartColumnDefinitions() { return new global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinitions(); }
        private object Activate_63_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>(); }
        private object Activate_64_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>(); }
        private object Activate_65_ChartColumnDefinition() { return new global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition(); }
        private object Activate_67_ChartRowDefinitions() { return new global::Syncfusion.UI.Xaml.Charts.ChartRowDefinitions(); }
        private object Activate_68_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition>(); }
        private object Activate_69_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition>(); }
        private object Activate_70_ChartRowDefinition() { return new global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition(); }
        private object Activate_71_ChartAxisCollection() { return new global::Syncfusion.UI.Xaml.Charts.ChartAxisCollection(); }
        private object Activate_72_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>(); }
        private object Activate_73_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>(); }
        private object Activate_78_LabelStyle() { return new global::Syncfusion.UI.Xaml.Charts.LabelStyle(); }
        private object Activate_79_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel>(); }
        private object Activate_80_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel>(); }
        private object Activate_81_ChartAxisLabel() { return new global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel(); }
        private object Activate_84_ChartAxisLabelCollection() { return new global::Syncfusion.UI.Xaml.Charts.ChartAxisLabelCollection(); }
        private object Activate_88_PieSeries() { return new global::Syncfusion.UI.Xaml.Charts.PieSeries(); }
        private object Activate_94_ChartAdornmentInfo() { return new global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo(); }
        private object Activate_101_List() { return new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Media.Brush>(); }
        private object Activate_102_ChartsModelDaten() { return new global::BalanceSheet.Controls.Chart.ChartsModelDaten(); }
        private object Activate_105_ColorConverter() { return new global::BalanceSheet.Controls.Chart.PivotChart.ColorConverter(); }
        private object Activate_106_ChartLegend() { return new global::Syncfusion.UI.Xaml.Charts.ChartLegend(); }
        private object Activate_112_WrapPanel() { return new global::WinRTXamlToolkit.Controls.WrapPanel(); }
        private object Activate_115_ChartTooltip() { return new global::Syncfusion.UI.Xaml.Charts.ChartTooltip(); }
        private object Activate_116_PivotChartModelDaten() { return new global::BalanceSheet.Controls.Chart.PivotChart.PivotChartModelDaten(); }
        private object Activate_117_MyControl() { return new global::BalanceSheet.Controls.MyControl(); }
        private object Activate_118_PageHeader() { return new global::BalanceSheet.Controls.PageHeader(); }
        private object Activate_121_DatePickerConverter() { return new global::BalanceSheet.ContractModelConverterExtensions.DatePickerConverter(); }
        private object Activate_122_Calendar() { return new global::BalanceSheet.Views.Calendar(); }
        private object Activate_123_HelpPage() { return new global::BalanceSheet.Views.HelpPage(); }
        private object Activate_124_NullToVisibilityConverter() { return new global::BalanceSheet.ValueConverters.NullToVisibilityConverter(); }
        private object Activate_125_NavMenuListView() { return new global::BalanceSheet.Controls.NavMenuListView(); }
        private object Activate_127_AppShell() { return new global::BalanceSheet.Views.AppShell(); }
        private object Activate_129_CalendarPage() { return new global::BalanceSheet.Views.CalendarPage(); }
        private object Activate_130_BasePage() { return new global::BalanceSheet.Views.BasePage(); }
        private object Activate_131_HomePage_Mobile() { return new global::BalanceSheet.Views.HomePage_Mobile(); }
        private object Activate_132_AddPage_Mobile() { return new global::BalanceSheet.Views.Mobile.AddPage_Mobile(); }
        private object Activate_133_CalendarPage_Mobile() { return new global::BalanceSheet.Views.Mobile.CalendarPage_Mobile(); }
        private object Activate_134_Auto() { return new global::BalanceSheet.Views.Mobile.CostsIncomes.Auto(); }
        private object Activate_135_FixKosten() { return new global::BalanceSheet.Views.Mobile.CostsIncomes.FixKosten(); }
        private object Activate_136_Incomes() { return new global::BalanceSheet.Views.Mobile.CostsIncomes.Incomes(); }
        private object Activate_137_Lebensmittel() { return new global::BalanceSheet.Views.Mobile.CostsIncomes.Lebensmittel(); }
        private object Activate_138_Personal() { return new global::BalanceSheet.Views.Mobile.CostsIncomes.Personal(); }
        private object Activate_139_SaveResult() { return new global::BalanceSheet.Views.Mobile.CostsIncomes.SaveResult(); }
        private object Activate_140_Unterhaltung() { return new global::BalanceSheet.Views.Mobile.CostsIncomes.Unterhaltung(); }
        private object Activate_141_Verkehr() { return new global::BalanceSheet.Views.Mobile.CostsIncomes.Verkehr(); }
        private object Activate_142_IntervalDatum() { return new global::BalanceSheet.Views.Mobile.IntervalDatum(); }
        private object Activate_143_ReportPage_Mobile() { return new global::BalanceSheet.Views.Mobile.ReportPage_Mobile(); }
        private object Activate_144_Statistik_Mobile() { return new global::BalanceSheet.Views.Mobile.Statistik_Mobile(); }
        private object Activate_145_ProfilePage() { return new global::BalanceSheet.Views.ProfilePage(); }
        private object Activate_146_ReportPage() { return new global::BalanceSheet.Views.ReportPage(); }
        private object Activate_147_BooleanToVisibilityConverter() { return new global::BalanceSheet.ValueConverters.BooleanToVisibilityConverter(); }
        private object Activate_148_SettingsPage() { return new global::BalanceSheet.Views.SettingsPage(); }
        private object Activate_149_AuthProviderToStringConverter() { return new global::BalanceSheet.ValueConverters.AuthProviderToStringConverter(); }
        private object Activate_150_SignInPage() { return new global::BalanceSheet.Views.SignInPage(); }
        private object Activate_153_ObservableObjectBase() { return new global::BalanceSheet.ComponentModel.ObservableObjectBase(); }
        private object Activate_154_StatisticPage() { return new global::BalanceSheet.Views.StatisticPage(); }
        private object Activate_155_SelectedLegendItemToColorConverter() { return new global::BalanceSheet.ValueConverters.SelectedLegendItemToColorConverter(); }
        private object Activate_156_WelcomePage() { return new global::BalanceSheet.Views.WelcomePage(); }
        private void VectorAdd_6_ChartSeriesCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_7_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_8_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_20_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAdornment>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)item;
            collection.Add(newItem);
        }
        private void VectorAdd_21_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAdornment>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)item;
            collection.Add(newItem);
        }
        private void VectorAdd_44_ChartBehaviorsCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartBehavior>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartBehavior)item;
            collection.Add(newItem);
        }
        private void VectorAdd_45_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartBehavior>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartBehavior)item;
            collection.Add(newItem);
        }
        private void VectorAdd_46_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartBehavior>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartBehavior)item;
            collection.Add(newItem);
        }
        private void VectorAdd_49_AnnotationCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.Annotation>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.Annotation)item;
            collection.Add(newItem);
        }
        private void VectorAdd_50_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.Annotation>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.Annotation)item;
            collection.Add(newItem);
        }
        private void VectorAdd_51_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.Annotation>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.Annotation)item;
            collection.Add(newItem);
        }
        private void VectorAdd_59_ChartVisibleSeriesCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_60_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_61_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_62_ChartColumnDefinitions(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_63_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_64_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_67_ChartRowDefinitions(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_68_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_69_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_71_ChartAxisCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_72_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_73_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_79_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_80_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_84_ChartAxisLabelCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_101_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Brush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.Brush)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  BalanceSheet.Controls.Chart.ChartConverter
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_ChartConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  BalanceSheet.Controls.Chart.ColorConverter
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_2_ColorConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  Syncfusion.UI.Xaml.Charts.SfChart
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase"));
                userType.Activator = Activate_3_SfChart;
                userType.SetContentPropertyName("Syncfusion.UI.Xaml.Charts.SfChart.Series");
                userType.AddMemberName("Series");
                userType.AddMemberName("AreaBorderThickness");
                userType.AddMemberName("PrimaryAxis");
                userType.AddMemberName("SecondaryAxis");
                userType.AddMemberName("Watermark");
                userType.AddMemberName("AreaBorderBrush");
                userType.AddMemberName("AreaBackground");
                userType.AddMemberName("Behaviors");
                userType.AddMemberName("TechnicalIndicators");
                userType.AddMemberName("Annotations");
                xamlType = userType;
                break;

            case 4:   //  Syncfusion.UI.Xaml.Charts.ChartBase
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("AxisThickness");
                userType.AddMemberName("SeriesClipRect");
                userType.AddMemberName("VisibleSeries");
                userType.AddMemberName("Palette");
                userType.AddMemberName("SeriesSelectedIndex");
                userType.AddMemberName("ColumnDefinitions");
                userType.AddMemberName("RowDefinitions");
                userType.AddMemberName("Axes");
                userType.AddMemberName("SideBySideSeriesPlacement");
                userType.AddMemberName("Header");
                userType.AddMemberName("HorizontalHeaderAlignment");
                userType.AddMemberName("VerticalHeaderAlignment");
                userType.AddMemberName("ColorModel");
                userType.AddMemberName("Legend");
                userType.AddMemberName("Row");
                userType.AddMemberName("Column");
                userType.AddMemberName("ColumnSpan");
                userType.AddMemberName("RowSpan");
                xamlType = userType;
                break;

            case 5:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Syncfusion.UI.Xaml.Charts.ChartSeriesCollection
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartSeries>"));
                userType.CollectionAdd = VectorAdd_6_ChartSeriesCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 7:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartSeries>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartSeries>"));
                userType.Activator = Activate_7_ObservableCollection;
                userType.CollectionAdd = VectorAdd_7_ObservableCollection;
                xamlType = userType;
                break;

            case 8:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartSeries>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_8_Collection;
                userType.CollectionAdd = VectorAdd_8_Collection;
                xamlType = userType;
                break;

            case 9:   //  Syncfusion.UI.Xaml.Charts.ChartSeries
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase"));
                userType.AddMemberName("Area");
                userType.AddMemberName("Stroke");
                userType.AddMemberName("StrokeThickness");
                xamlType = userType;
                break;

            case 10:   //  Syncfusion.UI.Xaml.Charts.ChartSeriesBase
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("DataCount");
                userType.AddMemberName("IsSortData");
                userType.AddMemberName("SortDirection");
                userType.AddMemberName("SortBy");
                userType.AddMemberName("TooltipTemplate");
                userType.AddMemberName("ShowTooltip");
                userType.AddMemberName("ListenPropertyChange");
                userType.AddMemberName("Adornments");
                userType.AddMemberName("IsSeriesVisible");
                userType.AddMemberName("Palette");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("TrackBallLabelTemplate");
                userType.AddMemberName("Interior");
                userType.AddMemberName("Label");
                userType.AddMemberName("LegendIcon");
                userType.AddMemberName("LegendIconTemplate");
                userType.AddMemberName("VisibilityOnLegend");
                userType.AddMemberName("SeriesSelectionBrush");
                userType.AddMemberName("ColorModel");
                userType.AddMemberName("XBindingPath");
                userType.AddMemberName("SegmentColorPath");
                userType.AddMemberName("EnableAnimation");
                userType.AddMemberName("AnimationDuration");
                userType.AddMemberName("EmptyPointValue");
                userType.AddMemberName("EmptyPointStyle");
                userType.AddMemberName("EmptyPointSymbolTemplate");
                userType.AddMemberName("ShowEmptyPoints");
                userType.AddMemberName("EmptyPointInterior");
                userType.AddMemberName("Spacing");
                xamlType = userType;
                break;

            case 11:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Double
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Int32
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  Boolean
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Syncfusion.UI.Xaml.Charts.Direction
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ascending", global::Syncfusion.UI.Xaml.Charts.Direction.Ascending);
                userType.AddEnumValue("Descending", global::Syncfusion.UI.Xaml.Charts.Direction.Descending);
                xamlType = userType;
                break;

            case 16:   //  System.Enum
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 17:   //  System.ValueType
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 18:   //  Syncfusion.UI.Xaml.Charts.SortingAxis
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("X", global::Syncfusion.UI.Xaml.Charts.SortingAxis.X);
                userType.AddEnumValue("Y", global::Syncfusion.UI.Xaml.Charts.SortingAxis.Y);
                xamlType = userType;
                break;

            case 19:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAdornment>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAdornment>"));
                userType.CollectionAdd = VectorAdd_20_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAdornment>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_21_Collection;
                userType.CollectionAdd = VectorAdd_21_Collection;
                xamlType = userType;
                break;

            case 22:   //  Syncfusion.UI.Xaml.Charts.ChartAdornment
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSegment"));
                userType.Activator = Activate_22_ChartAdornment;
                userType.AddMemberName("Series");
                userType.AddMemberName("Background");
                userType.AddMemberName("BorderThickness");
                userType.AddMemberName("BorderBrush");
                userType.AddMemberName("Margin");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("ConnectorRotationAngle");
                userType.AddMemberName("ConnectorHeight");
                userType.AddMemberName("ActualContent");
                userType.AddMemberName("XData");
                userType.AddMemberName("YData");
                userType.AddMemberName("X");
                userType.AddMemberName("Y");
                xamlType = userType;
                break;

            case 23:   //  Syncfusion.UI.Xaml.Charts.ChartSegment
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("XRange");
                userType.AddMemberName("YRange");
                userType.AddMemberName("Item");
                userType.AddMemberName("Interior");
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("StrokeDashArray");
                userType.AddMemberName("Stroke");
                xamlType = userType;
                break;

            case 24:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  Windows.UI.Xaml.Media.FontFamily
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  Windows.UI.Text.FontStyle
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 28:   //  Syncfusion.UI.Xaml.Charts.DoubleRange
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  Windows.UI.Xaml.Media.DoubleCollection
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  Syncfusion.UI.Xaml.Charts.ChartColorPalette
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.None);
                userType.AddEnumValue("Metro", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.Metro);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.Custom);
                userType.AddEnumValue("AutumnBrights", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.AutumnBrights);
                userType.AddEnumValue("FloraHues", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.FloraHues);
                userType.AddEnumValue("Pineapple", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.Pineapple);
                userType.AddEnumValue("TomatoSpectrum", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.TomatoSpectrum);
                userType.AddEnumValue("RedChrome", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.RedChrome);
                userType.AddEnumValue("PurpleChrome", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.PurpleChrome);
                userType.AddEnumValue("BlueChrome", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.BlueChrome);
                userType.AddEnumValue("GreenChrome", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.GreenChrome);
                userType.AddEnumValue("Elite", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.Elite);
                userType.AddEnumValue("SandyBeach", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.SandyBeach);
                userType.AddEnumValue("LightCandy", global::Syncfusion.UI.Xaml.Charts.ChartColorPalette.LightCandy);
                xamlType = userType;
                break;

            case 31:   //  System.Collections.IEnumerable
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 32:   //  String
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 33:   //  Syncfusion.UI.Xaml.Charts.ChartLegendIcon
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.None);
                userType.AddEnumValue("SeriesType", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.SeriesType);
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Rectangle);
                userType.AddEnumValue("StraightLine", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.StraightLine);
                userType.AddEnumValue("Circle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Circle);
                userType.AddEnumValue("Diamond", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Diamond);
                userType.AddEnumValue("Pentagon", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Pentagon);
                userType.AddEnumValue("Triangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Triangle);
                userType.AddEnumValue("InvertedTriangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.InvertedTriangle);
                userType.AddEnumValue("Cross", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Cross);
                xamlType = userType;
                break;

            case 34:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  Syncfusion.UI.Xaml.Charts.ChartColorModel
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_35_ChartColorModel;
                userType.AddMemberName("CustomBrushes");
                xamlType = userType;
                break;

            case 36:   //  TimeSpan
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  Syncfusion.UI.Xaml.Charts.EmptyPointValue
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Zero", global::Syncfusion.UI.Xaml.Charts.EmptyPointValue.Zero);
                userType.AddEnumValue("Average", global::Syncfusion.UI.Xaml.Charts.EmptyPointValue.Average);
                xamlType = userType;
                break;

            case 38:   //  Syncfusion.UI.Xaml.Charts.EmptyPointStyle
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Interior", global::Syncfusion.UI.Xaml.Charts.EmptyPointStyle.Interior);
                userType.AddEnumValue("Symbol", global::Syncfusion.UI.Xaml.Charts.EmptyPointStyle.Symbol);
                userType.AddEnumValue("SymbolAndInterior", global::Syncfusion.UI.Xaml.Charts.EmptyPointStyle.SymbolAndInterior);
                xamlType = userType;
                break;

            case 39:   //  Syncfusion.UI.Xaml.Charts.ChartAxisBase2D
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis"));
                xamlType = userType;
                break;

            case 40:   //  Syncfusion.UI.Xaml.Charts.ChartAxis
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("ActualPlotOffset");
                userType.AddMemberName("MaximumLabels");
                userType.AddMemberName("VisibleRange");
                userType.AddMemberName("HeaderPosition");
                userType.AddMemberName("ArrangeRect");
                userType.AddMemberName("PositionPath");
                userType.AddMemberName("ContentPath");
                userType.AddMemberName("LabelFormat");
                userType.AddMemberName("LabelsSource");
                userType.AddMemberName("PostfixLabelTemplate");
                userType.AddMemberName("PrefixLabelTemplate");
                userType.AddMemberName("PlotOffset");
                userType.AddMemberName("AxisLineOffset");
                userType.AddMemberName("LabelsPosition");
                userType.AddMemberName("LabelsIntersectAction");
                userType.AddMemberName("LabelExtent");
                userType.AddMemberName("LabelRotationAngle");
                userType.AddMemberName("AxisLineStyle");
                userType.AddMemberName("OpposedPosition");
                userType.AddMemberName("DesiredIntervalsCount");
                userType.AddMemberName("ThumbLabelVisibility");
                userType.AddMemberName("ThumbLabelTemplate");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("TickLineSize");
                userType.AddMemberName("VisibleLabels");
                userType.AddMemberName("IsInversed");
                userType.AddMemberName("Origin");
                userType.AddMemberName("ShowOrigin");
                userType.AddMemberName("TickLinesPosition");
                userType.AddMemberName("ShowAxisNextToOrigin");
                userType.AddMemberName("EdgeLabelsDrawingMode");
                userType.AddMemberName("EdgeLabelsVisibilityMode");
                userType.AddMemberName("MajorGridLineStyle");
                userType.AddMemberName("MinorGridLineStyle");
                userType.AddMemberName("MajorTickLineStyle");
                userType.AddMemberName("MinorTickLineStyle");
                userType.AddMemberName("OriginLineStyle");
                userType.AddMemberName("ShowTrackBallInfo");
                userType.AddMemberName("TrackBallLabelTemplate");
                userType.AddMemberName("CrosshairLabelTemplate");
                userType.AddMemberName("ShowGridLines");
                userType.AddMemberName("EnableAutoIntervalOnZooming");
                userType.AddMemberName("LabelStyle");
                userType.AddMemberName("LabelTemplate");
                userType.AddMemberName("CustomLabels");
                userType.AddMemberName("IsLogarithmic");
                xamlType = userType;
                break;

            case 41:   //  Syncfusion.UI.Xaml.Charts.RangeAxisBase
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxisBase2D"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  Syncfusion.UI.Xaml.Charts.Watermark
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 43:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 44:   //  Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartBehavior>"));
                userType.CollectionAdd = VectorAdd_44_ChartBehaviorsCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 45:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartBehavior>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartBehavior>"));
                userType.Activator = Activate_45_ObservableCollection;
                userType.CollectionAdd = VectorAdd_45_ObservableCollection;
                xamlType = userType;
                break;

            case 46:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartBehavior>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_46_Collection;
                userType.CollectionAdd = VectorAdd_46_Collection;
                xamlType = userType;
                break;

            case 47:   //  Syncfusion.UI.Xaml.Charts.ChartBehavior
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("AdorningCanvas");
                userType.AddMemberName("BottomAdorningCanvas");
                userType.AddMemberName("ChartArea");
                xamlType = userType;
                break;

            case 48:   //  Windows.UI.Xaml.Controls.Canvas
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 49:   //  Syncfusion.UI.Xaml.Charts.AnnotationCollection
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.Annotation>"));
                userType.CollectionAdd = VectorAdd_49_AnnotationCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 50:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.Annotation>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.Annotation>"));
                userType.Activator = Activate_50_ObservableCollection;
                userType.CollectionAdd = VectorAdd_50_ObservableCollection;
                xamlType = userType;
                break;

            case 51:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.Annotation>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_51_Collection;
                userType.CollectionAdd = VectorAdd_51_Collection;
                xamlType = userType;
                break;

            case 52:   //  Syncfusion.UI.Xaml.Charts.Annotation
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.FrameworkElement"));
                userType.AddMemberName("Text");
                userType.AddMemberName("EnableEditing");
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("EnableClipping");
                userType.AddMemberName("ShowToolTip");
                userType.AddMemberName("ToolTipContent");
                userType.AddMemberName("ToolTipShowDuration");
                userType.AddMemberName("ToolTipTemplate");
                userType.AddMemberName("ToolTipPlacement");
                userType.AddMemberName("CoordinateUnit");
                userType.AddMemberName("XAxisName");
                userType.AddMemberName("YAxisName");
                userType.AddMemberName("X1");
                userType.AddMemberName("Y1");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontStretch");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("Foreground");
                xamlType = userType;
                break;

            case 53:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 54:   //  Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Left);
                userType.AddEnumValue("Right", global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Right);
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Top);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement.Bottom);
                xamlType = userType;
                break;

            case 55:   //  Syncfusion.UI.Xaml.Charts.CoordinateUnit
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Pixel", global::Syncfusion.UI.Xaml.Charts.CoordinateUnit.Pixel);
                userType.AddEnumValue("Axis", global::Syncfusion.UI.Xaml.Charts.CoordinateUnit.Axis);
                xamlType = userType;
                break;

            case 56:   //  Windows.UI.Text.FontStretch
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Undefined", global::Windows.UI.Text.FontStretch.Undefined);
                userType.AddEnumValue("UltraCondensed", global::Windows.UI.Text.FontStretch.UltraCondensed);
                userType.AddEnumValue("ExtraCondensed", global::Windows.UI.Text.FontStretch.ExtraCondensed);
                userType.AddEnumValue("Condensed", global::Windows.UI.Text.FontStretch.Condensed);
                userType.AddEnumValue("SemiCondensed", global::Windows.UI.Text.FontStretch.SemiCondensed);
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStretch.Normal);
                userType.AddEnumValue("SemiExpanded", global::Windows.UI.Text.FontStretch.SemiExpanded);
                userType.AddEnumValue("Expanded", global::Windows.UI.Text.FontStretch.Expanded);
                userType.AddEnumValue("ExtraExpanded", global::Windows.UI.Text.FontStretch.ExtraExpanded);
                userType.AddEnumValue("UltraExpanded", global::Windows.UI.Text.FontStretch.UltraExpanded);
                xamlType = userType;
                break;

            case 57:   //  Windows.UI.Text.FontWeight
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 58:   //  Windows.Foundation.Rect
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 59:   //  Syncfusion.UI.Xaml.Charts.ChartVisibleSeriesCollection
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartSeriesBase>"));
                userType.CollectionAdd = VectorAdd_59_ChartVisibleSeriesCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 60:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartSeriesBase>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartSeriesBase>"));
                userType.Activator = Activate_60_ObservableCollection;
                userType.CollectionAdd = VectorAdd_60_ObservableCollection;
                xamlType = userType;
                break;

            case 61:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartSeriesBase>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_61_Collection;
                userType.CollectionAdd = VectorAdd_61_Collection;
                xamlType = userType;
                break;

            case 62:   //  Syncfusion.UI.Xaml.Charts.ChartColumnDefinitions
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>"));
                userType.CollectionAdd = VectorAdd_62_ChartColumnDefinitions;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 63:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>"));
                userType.Activator = Activate_63_ObservableCollection;
                userType.CollectionAdd = VectorAdd_63_ObservableCollection;
                xamlType = userType;
                break;

            case 64:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartColumnDefinition>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_64_Collection;
                userType.CollectionAdd = VectorAdd_64_Collection;
                xamlType = userType;
                break;

            case 65:   //  Syncfusion.UI.Xaml.Charts.ChartColumnDefinition
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_65_ChartColumnDefinition;
                userType.AddMemberName("Width");
                userType.AddMemberName("Unit");
                userType.AddMemberName("BorderThickness");
                userType.AddMemberName("BorderStroke");
                xamlType = userType;
                break;

            case 66:   //  Syncfusion.UI.Xaml.Charts.ChartUnitType
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Star", global::Syncfusion.UI.Xaml.Charts.ChartUnitType.Star);
                userType.AddEnumValue("Pixels", global::Syncfusion.UI.Xaml.Charts.ChartUnitType.Pixels);
                xamlType = userType;
                break;

            case 67:   //  Syncfusion.UI.Xaml.Charts.ChartRowDefinitions
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartRowDefinition>"));
                userType.CollectionAdd = VectorAdd_67_ChartRowDefinitions;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 68:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartRowDefinition>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartRowDefinition>"));
                userType.Activator = Activate_68_ObservableCollection;
                userType.CollectionAdd = VectorAdd_68_ObservableCollection;
                xamlType = userType;
                break;

            case 69:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartRowDefinition>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_69_Collection;
                userType.CollectionAdd = VectorAdd_69_Collection;
                xamlType = userType;
                break;

            case 70:   //  Syncfusion.UI.Xaml.Charts.ChartRowDefinition
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_70_ChartRowDefinition;
                userType.AddMemberName("RowTop");
                userType.AddMemberName("Height");
                userType.AddMemberName("Unit");
                userType.AddMemberName("BorderThickness");
                userType.AddMemberName("BorderStroke");
                xamlType = userType;
                break;

            case 71:   //  Syncfusion.UI.Xaml.Charts.ChartAxisCollection
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>"));
                userType.CollectionAdd = VectorAdd_71_ChartAxisCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 72:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>"));
                userType.Activator = Activate_72_ObservableCollection;
                userType.CollectionAdd = VectorAdd_72_ObservableCollection;
                xamlType = userType;
                break;

            case 73:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_73_Collection;
                userType.CollectionAdd = VectorAdd_73_Collection;
                xamlType = userType;
                break;

            case 74:   //  Syncfusion.UI.Xaml.Charts.AxisHeaderPosition
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Near", global::Syncfusion.UI.Xaml.Charts.AxisHeaderPosition.Near);
                userType.AddEnumValue("Far", global::Syncfusion.UI.Xaml.Charts.AxisHeaderPosition.Far);
                xamlType = userType;
                break;

            case 75:   //  Syncfusion.UI.Xaml.Charts.AxisElementPosition
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Inside", global::Syncfusion.UI.Xaml.Charts.AxisElementPosition.Inside);
                userType.AddEnumValue("Outside", global::Syncfusion.UI.Xaml.Charts.AxisElementPosition.Outside);
                xamlType = userType;
                break;

            case 76:   //  Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.None);
                userType.AddEnumValue("MultipleRows", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.MultipleRows);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Hide);
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Auto);
                xamlType = userType;
                break;

            case 77:   //  Windows.UI.Xaml.Style
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 78:   //  Syncfusion.UI.Xaml.Charts.LabelStyle
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 79:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxisLabel>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxisLabel>"));
                userType.Activator = Activate_79_ObservableCollection;
                userType.CollectionAdd = VectorAdd_79_ObservableCollection;
                xamlType = userType;
                break;

            case 80:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxisLabel>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_80_Collection;
                userType.CollectionAdd = VectorAdd_80_Collection;
                xamlType = userType;
                break;

            case 81:   //  Syncfusion.UI.Xaml.Charts.ChartAxisLabel
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_81_ChartAxisLabel;
                userType.AddMemberName("LabelContent");
                userType.AddMemberName("Position");
                userType.AddMemberName("PrefixLabelTemplate");
                userType.AddMemberName("PostfixLabelTemplate");
                xamlType = userType;
                break;

            case 82:   //  Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Center", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Center);
                userType.AddEnumValue("Shift", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Shift);
                userType.AddEnumValue("Fit", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Fit);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Hide);
                xamlType = userType;
                break;

            case 83:   //  Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Default);
                userType.AddEnumValue("AlwaysVisible", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.AlwaysVisible);
                userType.AddEnumValue("Visible", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Visible);
                xamlType = userType;
                break;

            case 84:   //  Syncfusion.UI.Xaml.Charts.ChartAxisLabelCollection
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxisLabel>"));
                userType.CollectionAdd = VectorAdd_84_ChartAxisLabelCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 85:   //  Windows.UI.Xaml.HorizontalAlignment
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 86:   //  Windows.UI.Xaml.VerticalAlignment
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 87:   //  Windows.UI.Xaml.UIElement
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 88:   //  Syncfusion.UI.Xaml.Charts.PieSeries
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CircularSeriesBase"));
                userType.Activator = Activate_88_PieSeries;
                userType.AddMemberName("Segment");
                userType.AddMemberName("PieCoefficient");
                xamlType = userType;
                break;

            case 89:   //  Syncfusion.UI.Xaml.Charts.CircularSeriesBase
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase"));
                userType.AddMemberName("ConnectorType");
                userType.AddMemberName("EnableSmartLabels");
                userType.AddMemberName("LabelPosition");
                userType.AddMemberName("ExplodeRadius");
                userType.AddMemberName("StartAngle");
                userType.AddMemberName("EndAngle");
                xamlType = userType;
                break;

            case 90:   //  Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.AdornmentSeries"));
                userType.AddMemberName("YBindingPath");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("ExplodeAll");
                userType.AddMemberName("ExplodeIndex");
                userType.AddMemberName("ExplodeOnMouseClick");
                userType.AddMemberName("SegmentSelectionBrush");
                xamlType = userType;
                break;

            case 91:   //  Syncfusion.UI.Xaml.Charts.AdornmentSeries
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries"));
                userType.AddMemberName("AdornmentsInfo");
                xamlType = userType;
                break;

            case 92:   //  Syncfusion.UI.Xaml.Charts.ConnectorMode
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Bezier", global::Syncfusion.UI.Xaml.Charts.ConnectorMode.Bezier);
                userType.AddEnumValue("Line", global::Syncfusion.UI.Xaml.Charts.ConnectorMode.Line);
                xamlType = userType;
                break;

            case 93:   //  Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Inside", global::Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition.Inside);
                userType.AddEnumValue("Outside", global::Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition.Outside);
                userType.AddEnumValue("OutsideExtended", global::Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition.OutsideExtended);
                xamlType = userType;
                break;

            case 94:   //  Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase"));
                userType.Activator = Activate_94_ChartAdornmentInfo;
                xamlType = userType;
                break;

            case 95:   //  Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("LabelRotationAngle");
                userType.AddMemberName("Background");
                userType.AddMemberName("BorderThickness");
                userType.AddMemberName("BorderBrush");
                userType.AddMemberName("Margin");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("UseSeriesPalette");
                userType.AddMemberName("LabelPosition");
                userType.AddMemberName("HighlightOnSelection");
                userType.AddMemberName("HorizontalAlignment");
                userType.AddMemberName("VerticalAlignment");
                userType.AddMemberName("ConnectorHeight");
                userType.AddMemberName("ConnectorRotationAngle");
                userType.AddMemberName("ConnectorLineStyle");
                userType.AddMemberName("ShowConnectorLine");
                userType.AddMemberName("LabelTemplate");
                userType.AddMemberName("Symbol");
                userType.AddMemberName("SymbolWidth");
                userType.AddMemberName("SymbolHeight");
                userType.AddMemberName("SymbolTemplate");
                userType.AddMemberName("SymbolInterior");
                userType.AddMemberName("SymbolStroke");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("Series");
                userType.AddMemberName("AdornmentsPosition");
                userType.AddMemberName("SegmentLabelContent");
                userType.AddMemberName("SegmentLabelFormat");
                userType.AddMemberName("ShowMarker");
                userType.AddMemberName("ShowLabel");
                xamlType = userType;
                break;

            case 96:   //  Syncfusion.UI.Xaml.Charts.PieSegment
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSegment"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 97:   //  Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Default);
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Auto);
                userType.AddEnumValue("Inner", global::Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Inner);
                userType.AddEnumValue("Outer", global::Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Outer);
                userType.AddEnumValue("Center", global::Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Center);
                xamlType = userType;
                break;

            case 98:   //  Syncfusion.UI.Xaml.Charts.ChartSymbol
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.Custom);
                userType.AddEnumValue("Ellipse", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.Ellipse);
                userType.AddEnumValue("Cross", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.Cross);
                userType.AddEnumValue("Diamond", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.Diamond);
                userType.AddEnumValue("Hexagon", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.Hexagon);
                userType.AddEnumValue("HorizontalLine", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.HorizontalLine);
                userType.AddEnumValue("InvertedTriangle", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.InvertedTriangle);
                userType.AddEnumValue("Pentagon", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.Pentagon);
                userType.AddEnumValue("Plus", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.Plus);
                userType.AddEnumValue("Square", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.Square);
                userType.AddEnumValue("Triangle", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.Triangle);
                userType.AddEnumValue("VerticalLine", global::Syncfusion.UI.Xaml.Charts.ChartSymbol.VerticalLine);
                xamlType = userType;
                break;

            case 99:   //  Syncfusion.UI.Xaml.Charts.AdornmentsPosition
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Charts.AdornmentsPosition.Top);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Charts.AdornmentsPosition.Bottom);
                userType.AddEnumValue("TopAndBottom", global::Syncfusion.UI.Xaml.Charts.AdornmentsPosition.TopAndBottom);
                xamlType = userType;
                break;

            case 100:   //  Syncfusion.UI.Xaml.Charts.LabelContent
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("XValue", global::Syncfusion.UI.Xaml.Charts.LabelContent.XValue);
                userType.AddEnumValue("YValue", global::Syncfusion.UI.Xaml.Charts.LabelContent.YValue);
                userType.AddEnumValue("Percentage", global::Syncfusion.UI.Xaml.Charts.LabelContent.Percentage);
                userType.AddEnumValue("YofTot", global::Syncfusion.UI.Xaml.Charts.LabelContent.YofTot);
                userType.AddEnumValue("DateTime", global::Syncfusion.UI.Xaml.Charts.LabelContent.DateTime);
                userType.AddEnumValue("LabelContentPath", global::Syncfusion.UI.Xaml.Charts.LabelContent.LabelContentPath);
                xamlType = userType;
                break;

            case 101:   //  System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_101_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 102:   //  BalanceSheet.Controls.Chart.ChartsModelDaten
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_102_ChartsModelDaten;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 103:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 104:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 105:   //  BalanceSheet.Controls.Chart.PivotChart.ColorConverter
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_105_ColorConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 106:   //  Syncfusion.UI.Xaml.Charts.ChartLegend
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_106_ChartLegend;
                userType.AddMemberName("LegendPosition");
                userType.AddMemberName("Orientation");
                userType.AddMemberName("DockPosition");
                userType.AddMemberName("ItemMargin");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("CornerRadius");
                userType.AddMemberName("CheckBoxVisibility");
                userType.AddMemberName("IconVisibility");
                userType.AddMemberName("IconWidth");
                userType.AddMemberName("IconHeight");
                userType.AddMemberName("OffsetX");
                userType.AddMemberName("OffsetY");
                xamlType = userType;
                break;

            case 107:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 108:   //  Syncfusion.UI.Xaml.Charts.LegendPosition
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Inside", global::Syncfusion.UI.Xaml.Charts.LegendPosition.Inside);
                userType.AddEnumValue("Outside", global::Syncfusion.UI.Xaml.Charts.LegendPosition.Outside);
                xamlType = userType;
                break;

            case 109:   //  Syncfusion.UI.Xaml.Charts.ChartOrientation
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Charts.ChartOrientation.Default);
                userType.AddEnumValue("Horizontal", global::Syncfusion.UI.Xaml.Charts.ChartOrientation.Horizontal);
                userType.AddEnumValue("Vertical", global::Syncfusion.UI.Xaml.Charts.ChartOrientation.Vertical);
                xamlType = userType;
                break;

            case 110:   //  Syncfusion.UI.Xaml.Charts.ChartDock
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Syncfusion.UI.Xaml.Charts.ChartDock.Left);
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Charts.ChartDock.Top);
                userType.AddEnumValue("Right", global::Syncfusion.UI.Xaml.Charts.ChartDock.Right);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Charts.ChartDock.Bottom);
                userType.AddEnumValue("Floating", global::Syncfusion.UI.Xaml.Charts.ChartDock.Floating);
                xamlType = userType;
                break;

            case 111:   //  Windows.UI.Xaml.CornerRadius
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 112:   //  WinRTXamlToolkit.Controls.WrapPanel
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Panel"));
                userType.Activator = Activate_112_WrapPanel;
                userType.AddMemberName("Orientation");
                userType.AddMemberName("ItemHeight");
                userType.AddMemberName("ItemWidth");
                xamlType = userType;
                break;

            case 113:   //  Windows.UI.Xaml.Controls.Panel
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 114:   //  Windows.UI.Xaml.Controls.Orientation
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 115:   //  Syncfusion.UI.Xaml.Charts.ChartTooltip
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_115_ChartTooltip;
                userType.AddMemberName("EnableAnimation");
                userType.AddMemberName("HorizontalAlignment");
                userType.AddMemberName("VerticalAlignment");
                userType.AddMemberName("TooltipMargin");
                userType.AddMemberName("ShowDuration");
                userType.AddMemberName("InitialShowDelay");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("VerticalOffset");
                xamlType = userType;
                break;

            case 116:   //  BalanceSheet.Controls.Chart.PivotChart.PivotChartModelDaten
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_116_PivotChartModelDaten;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 117:   //  BalanceSheet.Controls.MyControl
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_117_MyControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 118:   //  BalanceSheet.Controls.PageHeader
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_118_PageHeader;
                userType.AddMemberName("HeaderContent");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 119:   //  Windows.UI.Color
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 120:   //  Byte
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 121:   //  BalanceSheet.ContractModelConverterExtensions.DatePickerConverter
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_121_DatePickerConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 122:   //  BalanceSheet.Views.Calendar
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_122_Calendar;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 123:   //  BalanceSheet.Views.HelpPage
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_123_HelpPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 124:   //  BalanceSheet.ValueConverters.NullToVisibilityConverter
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_124_NullToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 125:   //  BalanceSheet.Controls.NavMenuListView
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ListView"));
                userType.Activator = Activate_125_NavMenuListView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 126:   //  Windows.UI.Xaml.Controls.ListView
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 127:   //  BalanceSheet.Views.AppShell
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_127_AppShell;
                userType.AddMemberName("TogglePaneButtonRect");
                userType.AddMemberName("AppFrame");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 128:   //  Windows.UI.Xaml.Controls.Frame
                xamlType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 129:   //  BalanceSheet.Views.CalendarPage
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_129_CalendarPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 130:   //  BalanceSheet.Views.BasePage
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_130_BasePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 131:   //  BalanceSheet.Views.HomePage_Mobile
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("BalanceSheet.Views.BasePage"));
                userType.Activator = Activate_131_HomePage_Mobile;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 132:   //  BalanceSheet.Views.Mobile.AddPage_Mobile
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_132_AddPage_Mobile;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 133:   //  BalanceSheet.Views.Mobile.CalendarPage_Mobile
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_133_CalendarPage_Mobile;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 134:   //  BalanceSheet.Views.Mobile.CostsIncomes.Auto
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_134_Auto;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 135:   //  BalanceSheet.Views.Mobile.CostsIncomes.FixKosten
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_135_FixKosten;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 136:   //  BalanceSheet.Views.Mobile.CostsIncomes.Incomes
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_136_Incomes;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 137:   //  BalanceSheet.Views.Mobile.CostsIncomes.Lebensmittel
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_137_Lebensmittel;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 138:   //  BalanceSheet.Views.Mobile.CostsIncomes.Personal
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_138_Personal;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 139:   //  BalanceSheet.Views.Mobile.CostsIncomes.SaveResult
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_139_SaveResult;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 140:   //  BalanceSheet.Views.Mobile.CostsIncomes.Unterhaltung
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_140_Unterhaltung;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 141:   //  BalanceSheet.Views.Mobile.CostsIncomes.Verkehr
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_141_Verkehr;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 142:   //  BalanceSheet.Views.Mobile.IntervalDatum
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_142_IntervalDatum;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 143:   //  BalanceSheet.Views.Mobile.ReportPage_Mobile
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_143_ReportPage_Mobile;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 144:   //  BalanceSheet.Views.Mobile.Statistik_Mobile
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_144_Statistik_Mobile;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 145:   //  BalanceSheet.Views.ProfilePage
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_145_ProfilePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 146:   //  BalanceSheet.Views.ReportPage
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_146_ReportPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 147:   //  BalanceSheet.ValueConverters.BooleanToVisibilityConverter
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_147_BooleanToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 148:   //  BalanceSheet.Views.SettingsPage
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("BalanceSheet.Views.BasePage"));
                userType.Activator = Activate_148_SettingsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 149:   //  BalanceSheet.ValueConverters.AuthProviderToStringConverter
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_149_AuthProviderToStringConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 150:   //  BalanceSheet.Views.SignInPage
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_150_SignInPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 151:   //  BalanceSheet.ViewModels.SignInViewModel
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("BalanceSheet.ViewModels.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 152:   //  BalanceSheet.ViewModels.ViewModelBase
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("BalanceSheet.ComponentModel.ObservableObjectBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 153:   //  BalanceSheet.ComponentModel.ObservableObjectBase
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_153_ObservableObjectBase;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 154:   //  BalanceSheet.Views.StatisticPage
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_154_StatisticPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 155:   //  BalanceSheet.ValueConverters.SelectedLegendItemToColorConverter
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_155_SelectedLegendItemToColorConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 156:   //  BalanceSheet.Views.WelcomePage
                userType = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_156_WelcomePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfGantt.UWP.Syncfusion_SfGantt_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Reports.Syncfusion_SfReportViewer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinRTXamlToolkit.Controls.DataVisualization.WinRTXamlToolkit_Controls_DataVisualization_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinRTXamlToolkit.WinRTXamlToolkit_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_SfChart_Series(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            return that.Series;
        }
        private void set_0_SfChart_Series(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            that.Series = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesCollection)Value;
        }
        private object get_1_ChartSeries_Area(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.Area;
        }
        private object get_2_ChartSeries_Stroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.Stroke;
        }
        private void set_2_ChartSeries_Stroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_3_ChartSeries_StrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.StrokeThickness;
        }
        private void set_3_ChartSeries_StrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_4_ChartSeriesBase_DataCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.DataCount;
        }
        private object get_5_ChartSeriesBase_IsSortData(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.IsSortData;
        }
        private void set_5_ChartSeriesBase_IsSortData(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.IsSortData = (global::System.Boolean)Value;
        }
        private object get_6_ChartSeriesBase_SortDirection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.SortDirection;
        }
        private void set_6_ChartSeriesBase_SortDirection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.SortDirection = (global::Syncfusion.UI.Xaml.Charts.Direction)Value;
        }
        private object get_7_ChartSeriesBase_SortBy(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.SortBy;
        }
        private void set_7_ChartSeriesBase_SortBy(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.SortBy = (global::Syncfusion.UI.Xaml.Charts.SortingAxis)Value;
        }
        private object get_8_ChartSeriesBase_TooltipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.TooltipTemplate;
        }
        private void set_8_ChartSeriesBase_TooltipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.TooltipTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_9_ChartSeriesBase_ShowTooltip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.ShowTooltip;
        }
        private void set_9_ChartSeriesBase_ShowTooltip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.ShowTooltip = (global::System.Boolean)Value;
        }
        private object get_10_ChartSeriesBase_ListenPropertyChange(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.ListenPropertyChange;
        }
        private void set_10_ChartSeriesBase_ListenPropertyChange(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.ListenPropertyChange = (global::System.Boolean)Value;
        }
        private object get_11_ChartSeriesBase_Adornments(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.Adornments;
        }
        private object get_12_ChartAdornment_Series(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.Series;
        }
        private object get_13_ChartAdornment_Background(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.Background;
        }
        private void set_13_ChartAdornment_Background(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.Background = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_14_ChartAdornment_BorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.BorderThickness;
        }
        private void set_14_ChartAdornment_BorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.BorderThickness = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_15_ChartAdornment_BorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.BorderBrush;
        }
        private void set_15_ChartAdornment_BorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.BorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_16_ChartAdornment_Margin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.Margin;
        }
        private void set_16_ChartAdornment_Margin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.Margin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_17_ChartAdornment_FontFamily(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.FontFamily;
        }
        private void set_17_ChartAdornment_FontFamily(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_18_ChartAdornment_FontStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.FontStyle;
        }
        private void set_18_ChartAdornment_FontStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_19_ChartAdornment_FontSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.FontSize;
        }
        private void set_19_ChartAdornment_FontSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_20_ChartAdornment_Foreground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.Foreground;
        }
        private void set_20_ChartAdornment_Foreground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_21_ChartAdornment_ConnectorRotationAngle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.ConnectorRotationAngle;
        }
        private void set_21_ChartAdornment_ConnectorRotationAngle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.ConnectorRotationAngle = (global::System.Double)Value;
        }
        private object get_22_ChartAdornment_ConnectorHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.ConnectorHeight;
        }
        private void set_22_ChartAdornment_ConnectorHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.ConnectorHeight = (global::System.Double)Value;
        }
        private object get_23_ChartAdornment_ActualContent(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.ActualContent;
        }
        private object get_24_ChartAdornment_XData(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.XData;
        }
        private void set_24_ChartAdornment_XData(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.XData = (global::System.Double)Value;
        }
        private object get_25_ChartAdornment_YData(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.YData;
        }
        private void set_25_ChartAdornment_YData(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            that.YData = (global::System.Double)Value;
        }
        private object get_26_ChartAdornment_X(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.X;
        }
        private object get_27_ChartAdornment_Y(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornment)instance;
            return that.Y;
        }
        private object get_28_ChartSegment_XRange(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            return that.XRange;
        }
        private void set_28_ChartSegment_XRange(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            that.XRange = (global::Syncfusion.UI.Xaml.Charts.DoubleRange)Value;
        }
        private object get_29_ChartSegment_YRange(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            return that.YRange;
        }
        private void set_29_ChartSegment_YRange(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            that.YRange = (global::Syncfusion.UI.Xaml.Charts.DoubleRange)Value;
        }
        private object get_30_ChartSegment_Item(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            return that.Item;
        }
        private void set_30_ChartSegment_Item(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            that.Item = (global::System.Object)Value;
        }
        private object get_31_ChartSegment_Interior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            return that.Interior;
        }
        private void set_31_ChartSegment_Interior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            that.Interior = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_32_ChartSegment_StrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            return that.StrokeThickness;
        }
        private void set_32_ChartSegment_StrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_33_ChartSegment_StrokeDashArray(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            return that.StrokeDashArray;
        }
        private void set_33_ChartSegment_StrokeDashArray(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            that.StrokeDashArray = (global::Windows.UI.Xaml.Media.DoubleCollection)Value;
        }
        private object get_34_ChartSegment_Stroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            return that.Stroke;
        }
        private void set_34_ChartSegment_Stroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSegment)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_35_ChartSeriesBase_IsSeriesVisible(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.IsSeriesVisible;
        }
        private void set_35_ChartSeriesBase_IsSeriesVisible(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.IsSeriesVisible = (global::System.Boolean)Value;
        }
        private object get_36_ChartSeriesBase_Palette(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.Palette;
        }
        private void set_36_ChartSeriesBase_Palette(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.Palette = (global::Syncfusion.UI.Xaml.Charts.ChartColorPalette)Value;
        }
        private object get_37_ChartSeriesBase_ItemsSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.ItemsSource;
        }
        private void set_37_ChartSeriesBase_ItemsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.ItemsSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_38_ChartSeriesBase_TrackBallLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.TrackBallLabelTemplate;
        }
        private void set_38_ChartSeriesBase_TrackBallLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.TrackBallLabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_39_ChartSeriesBase_Interior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.Interior;
        }
        private void set_39_ChartSeriesBase_Interior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.Interior = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_40_ChartSeriesBase_Label(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.Label;
        }
        private void set_40_ChartSeriesBase_Label(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.Label = (global::System.String)Value;
        }
        private object get_41_ChartSeriesBase_LegendIcon(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.LegendIcon;
        }
        private void set_41_ChartSeriesBase_LegendIcon(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.LegendIcon = (global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon)Value;
        }
        private object get_42_ChartSeriesBase_LegendIconTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.LegendIconTemplate;
        }
        private void set_42_ChartSeriesBase_LegendIconTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.LegendIconTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_43_ChartSeriesBase_VisibilityOnLegend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.VisibilityOnLegend;
        }
        private void set_43_ChartSeriesBase_VisibilityOnLegend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.VisibilityOnLegend = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_44_ChartSeriesBase_SeriesSelectionBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.SeriesSelectionBrush;
        }
        private void set_44_ChartSeriesBase_SeriesSelectionBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.SeriesSelectionBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_45_ChartSeriesBase_ColorModel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.ColorModel;
        }
        private void set_45_ChartSeriesBase_ColorModel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.ColorModel = (global::Syncfusion.UI.Xaml.Charts.ChartColorModel)Value;
        }
        private object get_46_ChartSeriesBase_XBindingPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.XBindingPath;
        }
        private void set_46_ChartSeriesBase_XBindingPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.XBindingPath = (global::System.String)Value;
        }
        private object get_47_ChartSeriesBase_SegmentColorPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.SegmentColorPath;
        }
        private void set_47_ChartSeriesBase_SegmentColorPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.SegmentColorPath = (global::System.String)Value;
        }
        private object get_48_ChartSeriesBase_EnableAnimation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.EnableAnimation;
        }
        private void set_48_ChartSeriesBase_EnableAnimation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.EnableAnimation = (global::System.Boolean)Value;
        }
        private object get_49_ChartSeriesBase_AnimationDuration(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.AnimationDuration;
        }
        private void set_49_ChartSeriesBase_AnimationDuration(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.AnimationDuration = (global::System.TimeSpan)Value;
        }
        private object get_50_ChartSeriesBase_EmptyPointValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.EmptyPointValue;
        }
        private void set_50_ChartSeriesBase_EmptyPointValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.EmptyPointValue = (global::Syncfusion.UI.Xaml.Charts.EmptyPointValue)Value;
        }
        private object get_51_ChartSeriesBase_EmptyPointStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.EmptyPointStyle;
        }
        private void set_51_ChartSeriesBase_EmptyPointStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.EmptyPointStyle = (global::Syncfusion.UI.Xaml.Charts.EmptyPointStyle)Value;
        }
        private object get_52_ChartSeriesBase_EmptyPointSymbolTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.EmptyPointSymbolTemplate;
        }
        private void set_52_ChartSeriesBase_EmptyPointSymbolTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.EmptyPointSymbolTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_53_ChartSeriesBase_ShowEmptyPoints(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.ShowEmptyPoints;
        }
        private void set_53_ChartSeriesBase_ShowEmptyPoints(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.ShowEmptyPoints = (global::System.Boolean)Value;
        }
        private object get_54_ChartSeriesBase_EmptyPointInterior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            return that.EmptyPointInterior;
        }
        private void set_54_ChartSeriesBase_EmptyPointInterior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase)instance;
            that.EmptyPointInterior = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_55_ChartSeriesBase_Spacing(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetSpacing((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_55_ChartSeriesBase_Spacing(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetSpacing((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Double)Value);
        }
        private object get_56_SfChart_AreaBorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            return that.AreaBorderThickness;
        }
        private void set_56_SfChart_AreaBorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            that.AreaBorderThickness = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_57_SfChart_PrimaryAxis(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            return that.PrimaryAxis;
        }
        private void set_57_SfChart_PrimaryAxis(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            that.PrimaryAxis = (global::Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)Value;
        }
        private object get_58_SfChart_SecondaryAxis(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            return that.SecondaryAxis;
        }
        private void set_58_SfChart_SecondaryAxis(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            that.SecondaryAxis = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)Value;
        }
        private object get_59_SfChart_Watermark(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            return that.Watermark;
        }
        private void set_59_SfChart_Watermark(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            that.Watermark = (global::Syncfusion.UI.Xaml.Charts.Watermark)Value;
        }
        private object get_60_SfChart_AreaBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            return that.AreaBorderBrush;
        }
        private void set_60_SfChart_AreaBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            that.AreaBorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_61_SfChart_AreaBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            return that.AreaBackground;
        }
        private void set_61_SfChart_AreaBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            that.AreaBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_62_SfChart_Behaviors(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            return that.Behaviors;
        }
        private void set_62_SfChart_Behaviors(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            that.Behaviors = (global::Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection)Value;
        }
        private object get_63_ChartBehavior_AdorningCanvas(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBehavior)instance;
            return that.AdorningCanvas;
        }
        private object get_64_ChartBehavior_BottomAdorningCanvas(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBehavior)instance;
            return that.BottomAdorningCanvas;
        }
        private object get_65_ChartBehavior_ChartArea(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBehavior)instance;
            return that.ChartArea;
        }
        private object get_66_SfChart_TechnicalIndicators(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            return that.TechnicalIndicators;
        }
        private void set_66_SfChart_TechnicalIndicators(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            that.TechnicalIndicators = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartSeries>)Value;
        }
        private object get_67_SfChart_Annotations(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            return that.Annotations;
        }
        private void set_67_SfChart_Annotations(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfChart)instance;
            that.Annotations = (global::Syncfusion.UI.Xaml.Charts.AnnotationCollection)Value;
        }
        private object get_68_Annotation_Text(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.Text;
        }
        private void set_68_Annotation_Text(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_69_Annotation_EnableEditing(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.EnableEditing;
        }
        private void set_69_Annotation_EnableEditing(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.EnableEditing = (global::System.Boolean)Value;
        }
        private object get_70_Annotation_ContentTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ContentTemplate;
        }
        private void set_70_Annotation_ContentTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_71_Annotation_EnableClipping(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.EnableClipping;
        }
        private void set_71_Annotation_EnableClipping(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.EnableClipping = (global::System.Boolean)Value;
        }
        private object get_72_Annotation_ShowToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ShowToolTip;
        }
        private void set_72_Annotation_ShowToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ShowToolTip = (global::System.Boolean)Value;
        }
        private object get_73_Annotation_ToolTipContent(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ToolTipContent;
        }
        private void set_73_Annotation_ToolTipContent(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ToolTipContent = (global::System.Object)Value;
        }
        private object get_74_Annotation_ToolTipShowDuration(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ToolTipShowDuration;
        }
        private void set_74_Annotation_ToolTipShowDuration(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ToolTipShowDuration = (global::System.Double)Value;
        }
        private object get_75_Annotation_ToolTipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ToolTipTemplate;
        }
        private void set_75_Annotation_ToolTipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ToolTipTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_76_Annotation_ToolTipPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.ToolTipPlacement;
        }
        private void set_76_Annotation_ToolTipPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.ToolTipPlacement = (global::Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement)Value;
        }
        private object get_77_Annotation_CoordinateUnit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.CoordinateUnit;
        }
        private void set_77_Annotation_CoordinateUnit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.CoordinateUnit = (global::Syncfusion.UI.Xaml.Charts.CoordinateUnit)Value;
        }
        private object get_78_Annotation_XAxisName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.XAxisName;
        }
        private void set_78_Annotation_XAxisName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.XAxisName = (global::System.String)Value;
        }
        private object get_79_Annotation_YAxisName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.YAxisName;
        }
        private void set_79_Annotation_YAxisName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.YAxisName = (global::System.String)Value;
        }
        private object get_80_Annotation_X1(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.X1;
        }
        private void set_80_Annotation_X1(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.X1 = (global::System.Object)Value;
        }
        private object get_81_Annotation_Y1(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.Y1;
        }
        private void set_81_Annotation_Y1(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.Y1 = (global::System.Object)Value;
        }
        private object get_82_Annotation_FontSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.FontSize;
        }
        private void set_82_Annotation_FontSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_83_Annotation_FontFamily(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.FontFamily;
        }
        private void set_83_Annotation_FontFamily(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_84_Annotation_FontStretch(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.FontStretch;
        }
        private void set_84_Annotation_FontStretch(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.FontStretch = (global::Windows.UI.Text.FontStretch)Value;
        }
        private object get_85_Annotation_FontStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.FontStyle;
        }
        private void set_85_Annotation_FontStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_86_Annotation_FontWeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.FontWeight;
        }
        private void set_86_Annotation_FontWeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_87_Annotation_Foreground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            return that.Foreground;
        }
        private void set_87_Annotation_Foreground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.Annotation)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_88_ChartBase_AxisThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.AxisThickness;
        }
        private object get_89_ChartBase_SeriesClipRect(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.SeriesClipRect;
        }
        private object get_90_ChartBase_VisibleSeries(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.VisibleSeries;
        }
        private object get_91_ChartBase_Palette(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.Palette;
        }
        private void set_91_ChartBase_Palette(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.Palette = (global::Syncfusion.UI.Xaml.Charts.ChartColorPalette)Value;
        }
        private object get_92_ChartBase_SeriesSelectedIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.SeriesSelectedIndex;
        }
        private void set_92_ChartBase_SeriesSelectedIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.SeriesSelectedIndex = (global::System.Int32)Value;
        }
        private object get_93_ChartBase_ColumnDefinitions(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.ColumnDefinitions;
        }
        private void set_93_ChartBase_ColumnDefinitions(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.ColumnDefinitions = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinitions)Value;
        }
        private object get_94_ChartColumnDefinition_Width(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition)instance;
            return that.Width;
        }
        private void set_94_ChartColumnDefinition_Width(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_95_ChartColumnDefinition_Unit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition)instance;
            return that.Unit;
        }
        private void set_95_ChartColumnDefinition_Unit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition)instance;
            that.Unit = (global::Syncfusion.UI.Xaml.Charts.ChartUnitType)Value;
        }
        private object get_96_ChartColumnDefinition_BorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition)instance;
            return that.BorderThickness;
        }
        private void set_96_ChartColumnDefinition_BorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition)instance;
            that.BorderThickness = (global::System.Double)Value;
        }
        private object get_97_ChartColumnDefinition_BorderStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition)instance;
            return that.BorderStroke;
        }
        private void set_97_ChartColumnDefinition_BorderStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartColumnDefinition)instance;
            that.BorderStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_98_ChartBase_RowDefinitions(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.RowDefinitions;
        }
        private void set_98_ChartBase_RowDefinitions(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.RowDefinitions = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinitions)Value;
        }
        private object get_99_ChartRowDefinition_RowTop(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)instance;
            return that.RowTop;
        }
        private object get_100_ChartRowDefinition_Height(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)instance;
            return that.Height;
        }
        private void set_100_ChartRowDefinition_Height(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)instance;
            that.Height = (global::System.Double)Value;
        }
        private object get_101_ChartRowDefinition_Unit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)instance;
            return that.Unit;
        }
        private void set_101_ChartRowDefinition_Unit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)instance;
            that.Unit = (global::Syncfusion.UI.Xaml.Charts.ChartUnitType)Value;
        }
        private object get_102_ChartRowDefinition_BorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)instance;
            return that.BorderThickness;
        }
        private void set_102_ChartRowDefinition_BorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)instance;
            that.BorderThickness = (global::System.Double)Value;
        }
        private object get_103_ChartRowDefinition_BorderStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)instance;
            return that.BorderStroke;
        }
        private void set_103_ChartRowDefinition_BorderStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartRowDefinition)instance;
            that.BorderStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_104_ChartBase_Axes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.Axes;
        }
        private object get_105_ChartAxis_ActualPlotOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ActualPlotOffset;
        }
        private object get_106_ChartAxis_MaximumLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.MaximumLabels;
        }
        private void set_106_ChartAxis_MaximumLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.MaximumLabels = (global::System.Int32)Value;
        }
        private object get_107_ChartAxis_VisibleRange(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.VisibleRange;
        }
        private object get_108_ChartAxis_HeaderPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.HeaderPosition;
        }
        private void set_108_ChartAxis_HeaderPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.HeaderPosition = (global::Syncfusion.UI.Xaml.Charts.AxisHeaderPosition)Value;
        }
        private object get_109_ChartAxis_ArrangeRect(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ArrangeRect;
        }
        private object get_110_ChartAxis_PositionPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.PositionPath;
        }
        private void set_110_ChartAxis_PositionPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.PositionPath = (global::System.String)Value;
        }
        private object get_111_ChartAxis_ContentPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ContentPath;
        }
        private void set_111_ChartAxis_ContentPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ContentPath = (global::System.String)Value;
        }
        private object get_112_ChartAxis_LabelFormat(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelFormat;
        }
        private void set_112_ChartAxis_LabelFormat(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelFormat = (global::System.String)Value;
        }
        private object get_113_ChartAxis_LabelsSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelsSource;
        }
        private void set_113_ChartAxis_LabelsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelsSource = (global::System.Object)Value;
        }
        private object get_114_ChartAxis_PostfixLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.PostfixLabelTemplate;
        }
        private void set_114_ChartAxis_PostfixLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.PostfixLabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_115_ChartAxis_PrefixLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.PrefixLabelTemplate;
        }
        private void set_115_ChartAxis_PrefixLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.PrefixLabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_116_ChartAxis_PlotOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.PlotOffset;
        }
        private void set_116_ChartAxis_PlotOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.PlotOffset = (global::System.Double)Value;
        }
        private object get_117_ChartAxis_AxisLineOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AxisLineOffset;
        }
        private void set_117_ChartAxis_AxisLineOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AxisLineOffset = (global::System.Double)Value;
        }
        private object get_118_ChartAxis_LabelsPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelsPosition;
        }
        private void set_118_ChartAxis_LabelsPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelsPosition = (global::Syncfusion.UI.Xaml.Charts.AxisElementPosition)Value;
        }
        private object get_119_ChartAxis_LabelsIntersectAction(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelsIntersectAction;
        }
        private void set_119_ChartAxis_LabelsIntersectAction(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelsIntersectAction = (global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction)Value;
        }
        private object get_120_ChartAxis_LabelExtent(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelExtent;
        }
        private void set_120_ChartAxis_LabelExtent(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelExtent = (global::System.Double)Value;
        }
        private object get_121_ChartAxis_LabelRotationAngle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelRotationAngle;
        }
        private void set_121_ChartAxis_LabelRotationAngle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelRotationAngle = (global::System.Double)Value;
        }
        private object get_122_ChartAxis_AxisLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AxisLineStyle;
        }
        private void set_122_ChartAxis_AxisLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AxisLineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_123_ChartAxis_OpposedPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.OpposedPosition;
        }
        private void set_123_ChartAxis_OpposedPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.OpposedPosition = (global::System.Boolean)Value;
        }
        private object get_124_ChartAxis_DesiredIntervalsCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.DesiredIntervalsCount;
        }
        private void set_124_ChartAxis_DesiredIntervalsCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.DesiredIntervalsCount = (global::System.Object)Value;
        }
        private object get_125_ChartAxis_ThumbLabelVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ThumbLabelVisibility;
        }
        private void set_125_ChartAxis_ThumbLabelVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ThumbLabelVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_126_ChartAxis_ThumbLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ThumbLabelTemplate;
        }
        private void set_126_ChartAxis_ThumbLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ThumbLabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_127_ChartAxis_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.Header;
        }
        private void set_127_ChartAxis_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_128_ChartAxis_HeaderStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.HeaderStyle;
        }
        private void set_128_ChartAxis_HeaderStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.HeaderStyle = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)Value;
        }
        private object get_129_ChartAxis_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.HeaderTemplate;
        }
        private void set_129_ChartAxis_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_130_ChartAxis_TickLineSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.TickLineSize;
        }
        private void set_130_ChartAxis_TickLineSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.TickLineSize = (global::System.Double)Value;
        }
        private object get_131_ChartAxis_VisibleLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.VisibleLabels;
        }
        private object get_132_ChartAxisLabel_LabelContent(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel)instance;
            return that.LabelContent;
        }
        private void set_132_ChartAxisLabel_LabelContent(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel)instance;
            that.LabelContent = (global::System.Object)Value;
        }
        private object get_133_ChartAxisLabel_Position(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel)instance;
            return that.Position;
        }
        private void set_133_ChartAxisLabel_Position(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel)instance;
            that.Position = (global::System.Double)Value;
        }
        private object get_134_ChartAxisLabel_PrefixLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel)instance;
            return that.PrefixLabelTemplate;
        }
        private void set_134_ChartAxisLabel_PrefixLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel)instance;
            that.PrefixLabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_135_ChartAxisLabel_PostfixLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel)instance;
            return that.PostfixLabelTemplate;
        }
        private void set_135_ChartAxisLabel_PostfixLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxisLabel)instance;
            that.PostfixLabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_136_ChartAxis_IsInversed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.IsInversed;
        }
        private void set_136_ChartAxis_IsInversed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.IsInversed = (global::System.Boolean)Value;
        }
        private object get_137_ChartAxis_Origin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.Origin;
        }
        private void set_137_ChartAxis_Origin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.Origin = (global::System.Double)Value;
        }
        private object get_138_ChartAxis_ShowOrigin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ShowOrigin;
        }
        private void set_138_ChartAxis_ShowOrigin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ShowOrigin = (global::System.Boolean)Value;
        }
        private object get_139_ChartAxis_TickLinesPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.TickLinesPosition;
        }
        private void set_139_ChartAxis_TickLinesPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.TickLinesPosition = (global::Syncfusion.UI.Xaml.Charts.AxisElementPosition)Value;
        }
        private object get_140_ChartAxis_ShowAxisNextToOrigin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ShowAxisNextToOrigin;
        }
        private void set_140_ChartAxis_ShowAxisNextToOrigin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ShowAxisNextToOrigin = (global::System.Boolean)Value;
        }
        private object get_141_ChartAxis_EdgeLabelsDrawingMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.EdgeLabelsDrawingMode;
        }
        private void set_141_ChartAxis_EdgeLabelsDrawingMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.EdgeLabelsDrawingMode = (global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode)Value;
        }
        private object get_142_ChartAxis_EdgeLabelsVisibilityMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.EdgeLabelsVisibilityMode;
        }
        private void set_142_ChartAxis_EdgeLabelsVisibilityMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.EdgeLabelsVisibilityMode = (global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode)Value;
        }
        private object get_143_ChartAxis_MajorGridLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.MajorGridLineStyle;
        }
        private void set_143_ChartAxis_MajorGridLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.MajorGridLineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_144_ChartAxis_MinorGridLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.MinorGridLineStyle;
        }
        private void set_144_ChartAxis_MinorGridLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.MinorGridLineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_145_ChartAxis_MajorTickLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.MajorTickLineStyle;
        }
        private void set_145_ChartAxis_MajorTickLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.MajorTickLineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_146_ChartAxis_MinorTickLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.MinorTickLineStyle;
        }
        private void set_146_ChartAxis_MinorTickLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.MinorTickLineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_147_ChartAxis_OriginLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.OriginLineStyle;
        }
        private void set_147_ChartAxis_OriginLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.OriginLineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_148_ChartAxis_ShowTrackBallInfo(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ShowTrackBallInfo;
        }
        private void set_148_ChartAxis_ShowTrackBallInfo(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ShowTrackBallInfo = (global::System.Boolean)Value;
        }
        private object get_149_ChartAxis_TrackBallLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.TrackBallLabelTemplate;
        }
        private void set_149_ChartAxis_TrackBallLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.TrackBallLabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_150_ChartAxis_CrosshairLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.CrosshairLabelTemplate;
        }
        private void set_150_ChartAxis_CrosshairLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.CrosshairLabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_151_ChartAxis_ShowGridLines(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ShowGridLines;
        }
        private void set_151_ChartAxis_ShowGridLines(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ShowGridLines = (global::System.Boolean)Value;
        }
        private object get_152_ChartAxis_EnableAutoIntervalOnZooming(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.EnableAutoIntervalOnZooming;
        }
        private void set_152_ChartAxis_EnableAutoIntervalOnZooming(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.EnableAutoIntervalOnZooming = (global::System.Boolean)Value;
        }
        private object get_153_ChartAxis_LabelStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelStyle;
        }
        private void set_153_ChartAxis_LabelStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelStyle = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)Value;
        }
        private object get_154_ChartAxis_LabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelTemplate;
        }
        private void set_154_ChartAxis_LabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_155_ChartAxis_CustomLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.CustomLabels;
        }
        private object get_156_ChartAxis_IsLogarithmic(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.IsLogarithmic;
        }
        private object get_157_ChartBase_SideBySideSeriesPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.SideBySideSeriesPlacement;
        }
        private void set_157_ChartBase_SideBySideSeriesPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.SideBySideSeriesPlacement = (global::System.Boolean)Value;
        }
        private object get_158_ChartBase_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.Header;
        }
        private void set_158_ChartBase_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_159_ChartBase_HorizontalHeaderAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.HorizontalHeaderAlignment;
        }
        private void set_159_ChartBase_HorizontalHeaderAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.HorizontalHeaderAlignment = (global::Windows.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_160_ChartBase_VerticalHeaderAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.VerticalHeaderAlignment;
        }
        private void set_160_ChartBase_VerticalHeaderAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.VerticalHeaderAlignment = (global::Windows.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_161_ChartBase_ColorModel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.ColorModel;
        }
        private void set_161_ChartBase_ColorModel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.ColorModel = (global::Syncfusion.UI.Xaml.Charts.ChartColorModel)Value;
        }
        private object get_162_ChartBase_Legend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.Legend;
        }
        private void set_162_ChartBase_Legend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.Legend = (global::System.Object)Value;
        }
        private object get_163_ChartBase_Row(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartBase.GetRow((global::Windows.UI.Xaml.UIElement)instance);
        }
        private void set_163_ChartBase_Row(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartBase.SetRow((global::Windows.UI.Xaml.UIElement)instance, (global::System.Int32)Value);
        }
        private object get_164_ChartBase_Column(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartBase.GetColumn((global::Windows.UI.Xaml.UIElement)instance);
        }
        private void set_164_ChartBase_Column(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartBase.SetColumn((global::Windows.UI.Xaml.UIElement)instance, (global::System.Int32)Value);
        }
        private object get_165_ChartBase_ColumnSpan(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartBase.GetColumnSpan((global::Windows.UI.Xaml.UIElement)instance);
        }
        private void set_165_ChartBase_ColumnSpan(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartBase.SetColumnSpan((global::Windows.UI.Xaml.UIElement)instance, (global::System.Int32)Value);
        }
        private object get_166_ChartBase_RowSpan(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartBase.GetRowSpan((global::Windows.UI.Xaml.UIElement)instance);
        }
        private void set_166_ChartBase_RowSpan(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartBase.SetRowSpan((global::Windows.UI.Xaml.UIElement)instance, (global::System.Int32)Value);
        }
        private object get_167_AccumulationSeriesBase_YBindingPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            return that.YBindingPath;
        }
        private void set_167_AccumulationSeriesBase_YBindingPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            that.YBindingPath = (global::System.String)Value;
        }
        private object get_168_CircularSeriesBase_ConnectorType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            return that.ConnectorType;
        }
        private void set_168_CircularSeriesBase_ConnectorType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            that.ConnectorType = (global::Syncfusion.UI.Xaml.Charts.ConnectorMode)Value;
        }
        private object get_169_CircularSeriesBase_EnableSmartLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            return that.EnableSmartLabels;
        }
        private void set_169_CircularSeriesBase_EnableSmartLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            that.EnableSmartLabels = (global::System.Boolean)Value;
        }
        private object get_170_AccumulationSeriesBase_SelectedIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            return that.SelectedIndex;
        }
        private void set_170_AccumulationSeriesBase_SelectedIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_171_CircularSeriesBase_LabelPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            return that.LabelPosition;
        }
        private void set_171_CircularSeriesBase_LabelPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            that.LabelPosition = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition)Value;
        }
        private object get_172_AccumulationSeriesBase_ExplodeAll(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            return that.ExplodeAll;
        }
        private void set_172_AccumulationSeriesBase_ExplodeAll(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            that.ExplodeAll = (global::System.Boolean)Value;
        }
        private object get_173_CircularSeriesBase_ExplodeRadius(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            return that.ExplodeRadius;
        }
        private void set_173_CircularSeriesBase_ExplodeRadius(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            that.ExplodeRadius = (global::System.Double)Value;
        }
        private object get_174_AdornmentSeries_AdornmentsInfo(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AdornmentSeries)instance;
            return that.AdornmentsInfo;
        }
        private void set_174_AdornmentSeries_AdornmentsInfo(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AdornmentSeries)instance;
            that.AdornmentsInfo = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo)Value;
        }
        private object get_175_PieSeries_Segment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.PieSeries)instance;
            return that.Segment;
        }
        private object get_176_PieSeries_PieCoefficient(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.PieSeries)instance;
            return that.PieCoefficient;
        }
        private void set_176_PieSeries_PieCoefficient(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.PieSeries)instance;
            that.PieCoefficient = (global::System.Double)Value;
        }
        private object get_177_CircularSeriesBase_StartAngle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            return that.StartAngle;
        }
        private void set_177_CircularSeriesBase_StartAngle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            that.StartAngle = (global::System.Double)Value;
        }
        private object get_178_CircularSeriesBase_EndAngle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            return that.EndAngle;
        }
        private void set_178_CircularSeriesBase_EndAngle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CircularSeriesBase)instance;
            that.EndAngle = (global::System.Double)Value;
        }
        private object get_179_AccumulationSeriesBase_ExplodeIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            return that.ExplodeIndex;
        }
        private void set_179_AccumulationSeriesBase_ExplodeIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            that.ExplodeIndex = (global::System.Int32)Value;
        }
        private object get_180_AccumulationSeriesBase_ExplodeOnMouseClick(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            return that.ExplodeOnMouseClick;
        }
        private void set_180_AccumulationSeriesBase_ExplodeOnMouseClick(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            that.ExplodeOnMouseClick = (global::System.Boolean)Value;
        }
        private object get_181_AccumulationSeriesBase_SegmentSelectionBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            return that.SegmentSelectionBrush;
        }
        private void set_181_AccumulationSeriesBase_SegmentSelectionBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase)instance;
            that.SegmentSelectionBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_182_ChartAdornmentInfoBase_LabelRotationAngle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.LabelRotationAngle;
        }
        private void set_182_ChartAdornmentInfoBase_LabelRotationAngle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.LabelRotationAngle = (global::System.Double)Value;
        }
        private object get_183_ChartAdornmentInfoBase_Background(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.Background;
        }
        private void set_183_ChartAdornmentInfoBase_Background(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.Background = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_184_ChartAdornmentInfoBase_BorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.BorderThickness;
        }
        private void set_184_ChartAdornmentInfoBase_BorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.BorderThickness = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_185_ChartAdornmentInfoBase_BorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.BorderBrush;
        }
        private void set_185_ChartAdornmentInfoBase_BorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.BorderBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_186_ChartAdornmentInfoBase_Margin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.Margin;
        }
        private void set_186_ChartAdornmentInfoBase_Margin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.Margin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_187_ChartAdornmentInfoBase_FontStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.FontStyle;
        }
        private void set_187_ChartAdornmentInfoBase_FontStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_188_ChartAdornmentInfoBase_FontSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.FontSize;
        }
        private void set_188_ChartAdornmentInfoBase_FontSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_189_ChartAdornmentInfoBase_Foreground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.Foreground;
        }
        private void set_189_ChartAdornmentInfoBase_Foreground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_190_ChartAdornmentInfoBase_UseSeriesPalette(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.UseSeriesPalette;
        }
        private void set_190_ChartAdornmentInfoBase_UseSeriesPalette(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.UseSeriesPalette = (global::System.Boolean)Value;
        }
        private object get_191_ChartAdornmentInfoBase_LabelPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.LabelPosition;
        }
        private void set_191_ChartAdornmentInfoBase_LabelPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.LabelPosition = (global::Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition)Value;
        }
        private object get_192_ChartAdornmentInfoBase_HighlightOnSelection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.HighlightOnSelection;
        }
        private void set_192_ChartAdornmentInfoBase_HighlightOnSelection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.HighlightOnSelection = (global::System.Boolean)Value;
        }
        private object get_193_ChartAdornmentInfoBase_HorizontalAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.HorizontalAlignment;
        }
        private void set_193_ChartAdornmentInfoBase_HorizontalAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.HorizontalAlignment = (global::Windows.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_194_ChartAdornmentInfoBase_VerticalAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.VerticalAlignment;
        }
        private void set_194_ChartAdornmentInfoBase_VerticalAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.VerticalAlignment = (global::Windows.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_195_ChartAdornmentInfoBase_ConnectorHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.ConnectorHeight;
        }
        private void set_195_ChartAdornmentInfoBase_ConnectorHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.ConnectorHeight = (global::System.Double)Value;
        }
        private object get_196_ChartAdornmentInfoBase_ConnectorRotationAngle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.ConnectorRotationAngle;
        }
        private void set_196_ChartAdornmentInfoBase_ConnectorRotationAngle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.ConnectorRotationAngle = (global::System.Double)Value;
        }
        private object get_197_ChartAdornmentInfoBase_ConnectorLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.ConnectorLineStyle;
        }
        private void set_197_ChartAdornmentInfoBase_ConnectorLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.ConnectorLineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_198_ChartAdornmentInfoBase_ShowConnectorLine(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.ShowConnectorLine;
        }
        private void set_198_ChartAdornmentInfoBase_ShowConnectorLine(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.ShowConnectorLine = (global::System.Boolean)Value;
        }
        private object get_199_ChartAdornmentInfoBase_LabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.LabelTemplate;
        }
        private void set_199_ChartAdornmentInfoBase_LabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.LabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_200_ChartAdornmentInfoBase_Symbol(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.Symbol;
        }
        private void set_200_ChartAdornmentInfoBase_Symbol(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.Symbol = (global::Syncfusion.UI.Xaml.Charts.ChartSymbol)Value;
        }
        private object get_201_ChartAdornmentInfoBase_SymbolWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.SymbolWidth;
        }
        private void set_201_ChartAdornmentInfoBase_SymbolWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.SymbolWidth = (global::System.Double)Value;
        }
        private object get_202_ChartAdornmentInfoBase_SymbolHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.SymbolHeight;
        }
        private void set_202_ChartAdornmentInfoBase_SymbolHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.SymbolHeight = (global::System.Double)Value;
        }
        private object get_203_ChartAdornmentInfoBase_SymbolTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.SymbolTemplate;
        }
        private void set_203_ChartAdornmentInfoBase_SymbolTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.SymbolTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_204_ChartAdornmentInfoBase_SymbolInterior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.SymbolInterior;
        }
        private void set_204_ChartAdornmentInfoBase_SymbolInterior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.SymbolInterior = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_205_ChartAdornmentInfoBase_SymbolStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.SymbolStroke;
        }
        private void set_205_ChartAdornmentInfoBase_SymbolStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.SymbolStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_206_ChartAdornmentInfoBase_FontFamily(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.FontFamily;
        }
        private void set_206_ChartAdornmentInfoBase_FontFamily(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_207_ChartAdornmentInfoBase_Series(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.Series;
        }
        private object get_208_ChartAdornmentInfoBase_AdornmentsPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.AdornmentsPosition;
        }
        private void set_208_ChartAdornmentInfoBase_AdornmentsPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.AdornmentsPosition = (global::Syncfusion.UI.Xaml.Charts.AdornmentsPosition)Value;
        }
        private object get_209_ChartAdornmentInfoBase_SegmentLabelContent(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.SegmentLabelContent;
        }
        private void set_209_ChartAdornmentInfoBase_SegmentLabelContent(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.SegmentLabelContent = (global::Syncfusion.UI.Xaml.Charts.LabelContent)Value;
        }
        private object get_210_ChartAdornmentInfoBase_SegmentLabelFormat(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.SegmentLabelFormat;
        }
        private void set_210_ChartAdornmentInfoBase_SegmentLabelFormat(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.SegmentLabelFormat = (global::System.String)Value;
        }
        private object get_211_ChartAdornmentInfoBase_ShowMarker(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.ShowMarker;
        }
        private void set_211_ChartAdornmentInfoBase_ShowMarker(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.ShowMarker = (global::System.Boolean)Value;
        }
        private object get_212_ChartAdornmentInfoBase_ShowLabel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            return that.ShowLabel;
        }
        private void set_212_ChartAdornmentInfoBase_ShowLabel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)instance;
            that.ShowLabel = (global::System.Boolean)Value;
        }
        private object get_213_ChartColorModel_CustomBrushes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartColorModel)instance;
            return that.CustomBrushes;
        }
        private void set_213_ChartColorModel_CustomBrushes(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartColorModel)instance;
            that.CustomBrushes = (global::System.Collections.Generic.List<global::Windows.UI.Xaml.Media.Brush>)Value;
        }
        private object get_214_ChartLegend_LegendPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.LegendPosition;
        }
        private void set_214_ChartLegend_LegendPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.LegendPosition = (global::Syncfusion.UI.Xaml.Charts.LegendPosition)Value;
        }
        private object get_215_ChartLegend_Orientation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.Orientation;
        }
        private void set_215_ChartLegend_Orientation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.Orientation = (global::Syncfusion.UI.Xaml.Charts.ChartOrientation)Value;
        }
        private object get_216_ChartLegend_DockPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.DockPosition;
        }
        private void set_216_ChartLegend_DockPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.DockPosition = (global::Syncfusion.UI.Xaml.Charts.ChartDock)Value;
        }
        private object get_217_ChartLegend_ItemMargin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.ItemMargin;
        }
        private void set_217_ChartLegend_ItemMargin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.ItemMargin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_218_ChartLegend_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.Header;
        }
        private void set_218_ChartLegend_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_219_ChartLegend_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.HeaderTemplate;
        }
        private void set_219_ChartLegend_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_220_ChartLegend_CornerRadius(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.CornerRadius;
        }
        private void set_220_ChartLegend_CornerRadius(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.CornerRadius = (global::Windows.UI.Xaml.CornerRadius)Value;
        }
        private object get_221_ChartLegend_CheckBoxVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.CheckBoxVisibility;
        }
        private void set_221_ChartLegend_CheckBoxVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.CheckBoxVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_222_ChartLegend_IconVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.IconVisibility;
        }
        private void set_222_ChartLegend_IconVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.IconVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_223_ChartLegend_IconWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.IconWidth;
        }
        private void set_223_ChartLegend_IconWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.IconWidth = (global::System.Double)Value;
        }
        private object get_224_ChartLegend_IconHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.IconHeight;
        }
        private void set_224_ChartLegend_IconHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.IconHeight = (global::System.Double)Value;
        }
        private object get_225_ChartLegend_OffsetX(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.OffsetX;
        }
        private void set_225_ChartLegend_OffsetX(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.OffsetX = (global::System.Double)Value;
        }
        private object get_226_ChartLegend_OffsetY(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            return that.OffsetY;
        }
        private void set_226_ChartLegend_OffsetY(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)instance;
            that.OffsetY = (global::System.Double)Value;
        }
        private object get_227_WrapPanel_Orientation(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.WrapPanel)instance;
            return that.Orientation;
        }
        private void set_227_WrapPanel_Orientation(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.WrapPanel)instance;
            that.Orientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_228_WrapPanel_ItemHeight(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.WrapPanel)instance;
            return that.ItemHeight;
        }
        private void set_228_WrapPanel_ItemHeight(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.WrapPanel)instance;
            that.ItemHeight = (global::System.Double)Value;
        }
        private object get_229_WrapPanel_ItemWidth(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.WrapPanel)instance;
            return that.ItemWidth;
        }
        private void set_229_WrapPanel_ItemWidth(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.WrapPanel)instance;
            that.ItemWidth = (global::System.Double)Value;
        }
        private object get_230_ChartTooltip_EnableAnimation(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartTooltip.GetEnableAnimation((global::Windows.UI.Xaml.UIElement)instance);
        }
        private void set_230_ChartTooltip_EnableAnimation(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartTooltip.SetEnableAnimation((global::Windows.UI.Xaml.UIElement)instance, (global::System.Boolean)Value);
        }
        private object get_231_ChartTooltip_HorizontalAlignment(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartTooltip.GetHorizontalAlignment((global::Windows.UI.Xaml.UIElement)instance);
        }
        private void set_231_ChartTooltip_HorizontalAlignment(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartTooltip.SetHorizontalAlignment((global::Windows.UI.Xaml.UIElement)instance, (global::Windows.UI.Xaml.HorizontalAlignment)Value);
        }
        private object get_232_ChartTooltip_VerticalAlignment(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartTooltip.GetVerticalAlignment((global::Windows.UI.Xaml.UIElement)instance);
        }
        private void set_232_ChartTooltip_VerticalAlignment(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartTooltip.SetVerticalAlignment((global::Windows.UI.Xaml.UIElement)instance, (global::Windows.UI.Xaml.VerticalAlignment)Value);
        }
        private object get_233_ChartTooltip_TooltipMargin(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartTooltip.GetTooltipMargin((global::Windows.UI.Xaml.UIElement)instance);
        }
        private void set_233_ChartTooltip_TooltipMargin(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartTooltip.SetTooltipMargin((global::Windows.UI.Xaml.UIElement)instance, (global::Windows.UI.Xaml.Thickness)Value);
        }
        private object get_234_ChartTooltip_ShowDuration(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartTooltip.GetShowDuration((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_234_ChartTooltip_ShowDuration(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartTooltip.SetShowDuration((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Int32)Value);
        }
        private object get_235_ChartTooltip_InitialShowDelay(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartTooltip.GetInitialShowDelay((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_235_ChartTooltip_InitialShowDelay(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartTooltip.SetInitialShowDelay((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Int32)Value);
        }
        private object get_236_ChartTooltip_HorizontalOffset(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartTooltip.GetHorizontalOffset((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_236_ChartTooltip_HorizontalOffset(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartTooltip.SetHorizontalOffset((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Double)Value);
        }
        private object get_237_ChartTooltip_VerticalOffset(object instance)
        {
            return global::Syncfusion.UI.Xaml.Charts.ChartTooltip.GetVerticalOffset((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_237_ChartTooltip_VerticalOffset(object instance, object Value)
        {
            global::Syncfusion.UI.Xaml.Charts.ChartTooltip.SetVerticalOffset((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Double)Value);
        }
        private object get_238_PageHeader_HeaderContent(object instance)
        {
            var that = (global::BalanceSheet.Controls.PageHeader)instance;
            return that.HeaderContent;
        }
        private void set_238_PageHeader_HeaderContent(object instance, object Value)
        {
            var that = (global::BalanceSheet.Controls.PageHeader)instance;
            that.HeaderContent = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_239_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_239_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_240_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_240_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_241_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_241_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_242_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_242_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_243_AppShell_TogglePaneButtonRect(object instance)
        {
            var that = (global::BalanceSheet.Views.AppShell)instance;
            return that.TogglePaneButtonRect;
        }
        private object get_244_AppShell_AppFrame(object instance)
        {
            var that = (global::BalanceSheet.Views.AppShell)instance;
            return that.AppFrame;
        }
        private object get_245_SignInPage_ViewModel(object instance)
        {
            var that = (global::BalanceSheet.Views.SignInPage)instance;
            return that.ViewModel;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember xamlMember = null;
            global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Syncfusion.UI.Xaml.Charts.SfChart.Series":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Series", "Syncfusion.UI.Xaml.Charts.ChartSeriesCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_SfChart_Series;
                xamlMember.Setter = set_0_SfChart_Series;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.Area":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Area", "Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember.Getter = get_1_ChartSeries_Area;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.Stroke":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_ChartSeries_Stroke;
                xamlMember.Setter = set_2_ChartSeries_Stroke;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.StrokeThickness":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_ChartSeries_StrokeThickness;
                xamlMember.Setter = set_3_ChartSeries_StrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.DataCount":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "DataCount", "Int32");
                xamlMember.Getter = get_4_ChartSeriesBase_DataCount;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSortData":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "IsSortData", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_ChartSeriesBase_IsSortData;
                xamlMember.Setter = set_5_ChartSeriesBase_IsSortData;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortDirection":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SortDirection", "Syncfusion.UI.Xaml.Charts.Direction");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_ChartSeriesBase_SortDirection;
                xamlMember.Setter = set_6_ChartSeriesBase_SortDirection;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortBy":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SortBy", "Syncfusion.UI.Xaml.Charts.SortingAxis");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_ChartSeriesBase_SortBy;
                xamlMember.Setter = set_7_ChartSeriesBase_SortBy;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.TooltipTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "TooltipTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_ChartSeriesBase_TooltipTemplate;
                xamlMember.Setter = set_8_ChartSeriesBase_TooltipTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowTooltip":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ShowTooltip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_ChartSeriesBase_ShowTooltip;
                xamlMember.Setter = set_9_ChartSeriesBase_ShowTooltip;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ListenPropertyChange":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ListenPropertyChange", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_ChartSeriesBase_ListenPropertyChange;
                xamlMember.Setter = set_10_ChartSeriesBase_ListenPropertyChange;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Adornments":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Adornments", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAdornment>");
                xamlMember.Getter = get_11_ChartSeriesBase_Adornments;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.Series":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Series", "Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember.Getter = get_12_ChartAdornment_Series;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.Background":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Background", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_ChartAdornment_Background;
                xamlMember.Setter = set_13_ChartAdornment_Background;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.BorderThickness":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "BorderThickness", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_ChartAdornment_BorderThickness;
                xamlMember.Setter = set_14_ChartAdornment_BorderThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.BorderBrush":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "BorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_ChartAdornment_BorderBrush;
                xamlMember.Setter = set_15_ChartAdornment_BorderBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.Margin":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Margin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_ChartAdornment_Margin;
                xamlMember.Setter = set_16_ChartAdornment_Margin;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.FontFamily":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_ChartAdornment_FontFamily;
                xamlMember.Setter = set_17_ChartAdornment_FontFamily;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.FontStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_ChartAdornment_FontStyle;
                xamlMember.Setter = set_18_ChartAdornment_FontStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.FontSize":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_ChartAdornment_FontSize;
                xamlMember.Setter = set_19_ChartAdornment_FontSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.Foreground":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_ChartAdornment_Foreground;
                xamlMember.Setter = set_20_ChartAdornment_Foreground;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.ConnectorRotationAngle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ConnectorRotationAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_ChartAdornment_ConnectorRotationAngle;
                xamlMember.Setter = set_21_ChartAdornment_ConnectorRotationAngle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.ConnectorHeight":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ConnectorHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_ChartAdornment_ConnectorHeight;
                xamlMember.Setter = set_22_ChartAdornment_ConnectorHeight;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.ActualContent":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ActualContent", "Object");
                xamlMember.Getter = get_23_ChartAdornment_ActualContent;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.XData":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "XData", "Double");
                xamlMember.Getter = get_24_ChartAdornment_XData;
                xamlMember.Setter = set_24_ChartAdornment_XData;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.YData":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "YData", "Double");
                xamlMember.Getter = get_25_ChartAdornment_YData;
                xamlMember.Setter = set_25_ChartAdornment_YData;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.X":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "X", "Double");
                xamlMember.Getter = get_26_ChartAdornment_X;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornment.Y":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Y", "Double");
                xamlMember.Getter = get_27_ChartAdornment_Y;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSegment.XRange":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSegment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "XRange", "Syncfusion.UI.Xaml.Charts.DoubleRange");
                xamlMember.Getter = get_28_ChartSegment_XRange;
                xamlMember.Setter = set_28_ChartSegment_XRange;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSegment.YRange":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSegment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "YRange", "Syncfusion.UI.Xaml.Charts.DoubleRange");
                xamlMember.Getter = get_29_ChartSegment_YRange;
                xamlMember.Setter = set_29_ChartSegment_YRange;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSegment.Item":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSegment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Item", "Object");
                xamlMember.Getter = get_30_ChartSegment_Item;
                xamlMember.Setter = set_30_ChartSegment_Item;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSegment.Interior":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSegment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Interior", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_ChartSegment_Interior;
                xamlMember.Setter = set_31_ChartSegment_Interior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeThickness":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSegment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_ChartSegment_StrokeThickness;
                xamlMember.Setter = set_32_ChartSegment_StrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeDashArray":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSegment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "StrokeDashArray", "Windows.UI.Xaml.Media.DoubleCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_ChartSegment_StrokeDashArray;
                xamlMember.Setter = set_33_ChartSegment_StrokeDashArray;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSegment.Stroke":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSegment");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_ChartSegment_Stroke;
                xamlMember.Setter = set_34_ChartSegment_Stroke;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSeriesVisible":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "IsSeriesVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_ChartSeriesBase_IsSeriesVisible;
                xamlMember.Setter = set_35_ChartSeriesBase_IsSeriesVisible;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Palette":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Palette", "Syncfusion.UI.Xaml.Charts.ChartColorPalette");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_ChartSeriesBase_Palette;
                xamlMember.Setter = set_36_ChartSeriesBase_Palette;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ItemsSource":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_ChartSeriesBase_ItemsSource;
                xamlMember.Setter = set_37_ChartSeriesBase_ItemsSource;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.TrackBallLabelTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "TrackBallLabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_ChartSeriesBase_TrackBallLabelTemplate;
                xamlMember.Setter = set_38_ChartSeriesBase_TrackBallLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Interior":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Interior", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_ChartSeriesBase_Interior;
                xamlMember.Setter = set_39_ChartSeriesBase_Interior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Label":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_ChartSeriesBase_Label;
                xamlMember.Setter = set_40_ChartSeriesBase_Label;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIcon":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LegendIcon", "Syncfusion.UI.Xaml.Charts.ChartLegendIcon");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_ChartSeriesBase_LegendIcon;
                xamlMember.Setter = set_41_ChartSeriesBase_LegendIcon;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIconTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LegendIconTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_ChartSeriesBase_LegendIconTemplate;
                xamlMember.Setter = set_42_ChartSeriesBase_LegendIconTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.VisibilityOnLegend":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "VisibilityOnLegend", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_ChartSeriesBase_VisibilityOnLegend;
                xamlMember.Setter = set_43_ChartSeriesBase_VisibilityOnLegend;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SeriesSelectionBrush":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SeriesSelectionBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_ChartSeriesBase_SeriesSelectionBrush;
                xamlMember.Setter = set_44_ChartSeriesBase_SeriesSelectionBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ColorModel":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ColorModel", "Syncfusion.UI.Xaml.Charts.ChartColorModel");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_ChartSeriesBase_ColorModel;
                xamlMember.Setter = set_45_ChartSeriesBase_ColorModel;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "XBindingPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_ChartSeriesBase_XBindingPath;
                xamlMember.Setter = set_46_ChartSeriesBase_XBindingPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SegmentColorPath":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SegmentColorPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_ChartSeriesBase_SegmentColorPath;
                xamlMember.Setter = set_47_ChartSeriesBase_SegmentColorPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EnableAnimation":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EnableAnimation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_ChartSeriesBase_EnableAnimation;
                xamlMember.Setter = set_48_ChartSeriesBase_EnableAnimation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.AnimationDuration":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "AnimationDuration", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_ChartSeriesBase_AnimationDuration;
                xamlMember.Setter = set_49_ChartSeriesBase_AnimationDuration;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointValue":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EmptyPointValue", "Syncfusion.UI.Xaml.Charts.EmptyPointValue");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_ChartSeriesBase_EmptyPointValue;
                xamlMember.Setter = set_50_ChartSeriesBase_EmptyPointValue;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EmptyPointStyle", "Syncfusion.UI.Xaml.Charts.EmptyPointStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_ChartSeriesBase_EmptyPointStyle;
                xamlMember.Setter = set_51_ChartSeriesBase_EmptyPointStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointSymbolTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EmptyPointSymbolTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_ChartSeriesBase_EmptyPointSymbolTemplate;
                xamlMember.Setter = set_52_ChartSeriesBase_EmptyPointSymbolTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowEmptyPoints":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ShowEmptyPoints", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_ChartSeriesBase_ShowEmptyPoints;
                xamlMember.Setter = set_53_ChartSeriesBase_ShowEmptyPoints;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointInterior":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EmptyPointInterior", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_ChartSeriesBase_EmptyPointInterior;
                xamlMember.Setter = set_54_ChartSeriesBase_EmptyPointInterior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Spacing":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Spacing", "Double");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_55_ChartSeriesBase_Spacing;
                xamlMember.Setter = set_55_ChartSeriesBase_Spacing;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderThickness":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "AreaBorderThickness", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_SfChart_AreaBorderThickness;
                xamlMember.Setter = set_56_SfChart_AreaBorderThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfChart.PrimaryAxis":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "PrimaryAxis", "Syncfusion.UI.Xaml.Charts.ChartAxisBase2D");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_SfChart_PrimaryAxis;
                xamlMember.Setter = set_57_SfChart_PrimaryAxis;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfChart.SecondaryAxis":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SecondaryAxis", "Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_SfChart_SecondaryAxis;
                xamlMember.Setter = set_58_SfChart_SecondaryAxis;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfChart.Watermark":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Watermark", "Syncfusion.UI.Xaml.Charts.Watermark");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_SfChart_Watermark;
                xamlMember.Setter = set_59_SfChart_Watermark;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderBrush":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "AreaBorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_SfChart_AreaBorderBrush;
                xamlMember.Setter = set_60_SfChart_AreaBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfChart.AreaBackground":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "AreaBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_SfChart_AreaBackground;
                xamlMember.Setter = set_61_SfChart_AreaBackground;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfChart.Behaviors":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Behaviors", "Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection");
                xamlMember.Getter = get_62_SfChart_Behaviors;
                xamlMember.Setter = set_62_SfChart_Behaviors;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBehavior.AdorningCanvas":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "AdorningCanvas", "Windows.UI.Xaml.Controls.Canvas");
                xamlMember.Getter = get_63_ChartBehavior_AdorningCanvas;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBehavior.BottomAdorningCanvas":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "BottomAdorningCanvas", "Windows.UI.Xaml.Controls.Canvas");
                xamlMember.Getter = get_64_ChartBehavior_BottomAdorningCanvas;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBehavior.ChartArea":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ChartArea", "Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember.Getter = get_65_ChartBehavior_ChartArea;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.SfChart.TechnicalIndicators":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "TechnicalIndicators", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartSeries>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_SfChart_TechnicalIndicators;
                xamlMember.Setter = set_66_SfChart_TechnicalIndicators;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfChart.Annotations":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfChart");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Annotations", "Syncfusion.UI.Xaml.Charts.AnnotationCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_SfChart_Annotations;
                xamlMember.Setter = set_67_SfChart_Annotations;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.Text":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_Annotation_Text;
                xamlMember.Setter = set_68_Annotation_Text;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.EnableEditing":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EnableEditing", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_Annotation_EnableEditing;
                xamlMember.Setter = set_69_Annotation_EnableEditing;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ContentTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_Annotation_ContentTemplate;
                xamlMember.Setter = set_70_Annotation_ContentTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.EnableClipping":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EnableClipping", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_Annotation_EnableClipping;
                xamlMember.Setter = set_71_Annotation_EnableClipping;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ShowToolTip":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ShowToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_Annotation_ShowToolTip;
                xamlMember.Setter = set_72_Annotation_ShowToolTip;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ToolTipContent":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ToolTipContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_Annotation_ToolTipContent;
                xamlMember.Setter = set_73_Annotation_ToolTipContent;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ToolTipShowDuration":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ToolTipShowDuration", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_Annotation_ToolTipShowDuration;
                xamlMember.Setter = set_74_Annotation_ToolTipShowDuration;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ToolTipTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ToolTipTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_Annotation_ToolTipTemplate;
                xamlMember.Setter = set_75_Annotation_ToolTipTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.ToolTipPlacement":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ToolTipPlacement", "Syncfusion.UI.Xaml.Charts.ToolTipLabelPlacement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_Annotation_ToolTipPlacement;
                xamlMember.Setter = set_76_Annotation_ToolTipPlacement;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.CoordinateUnit":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "CoordinateUnit", "Syncfusion.UI.Xaml.Charts.CoordinateUnit");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_Annotation_CoordinateUnit;
                xamlMember.Setter = set_77_Annotation_CoordinateUnit;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.XAxisName":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "XAxisName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_Annotation_XAxisName;
                xamlMember.Setter = set_78_Annotation_XAxisName;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.YAxisName":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "YAxisName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_Annotation_YAxisName;
                xamlMember.Setter = set_79_Annotation_YAxisName;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.X1":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "X1", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_Annotation_X1;
                xamlMember.Setter = set_80_Annotation_X1;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.Y1":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Y1", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_Annotation_Y1;
                xamlMember.Setter = set_81_Annotation_Y1;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.FontSize":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_Annotation_FontSize;
                xamlMember.Setter = set_82_Annotation_FontSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.FontFamily":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_Annotation_FontFamily;
                xamlMember.Setter = set_83_Annotation_FontFamily;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.FontStretch":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "FontStretch", "Windows.UI.Text.FontStretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_Annotation_FontStretch;
                xamlMember.Setter = set_84_Annotation_FontStretch;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.FontStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_Annotation_FontStyle;
                xamlMember.Setter = set_85_Annotation_FontStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.FontWeight":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_Annotation_FontWeight;
                xamlMember.Setter = set_86_Annotation_FontWeight;
                break;
            case "Syncfusion.UI.Xaml.Charts.Annotation.Foreground":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.Annotation");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_Annotation_Foreground;
                xamlMember.Setter = set_87_Annotation_Foreground;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.AxisThickness":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "AxisThickness", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_ChartBase_AxisThickness;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.SeriesClipRect":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SeriesClipRect", "Windows.Foundation.Rect");
                xamlMember.Getter = get_89_ChartBase_SeriesClipRect;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.VisibleSeries":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "VisibleSeries", "Syncfusion.UI.Xaml.Charts.ChartVisibleSeriesCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_ChartBase_VisibleSeries;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Palette":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Palette", "Syncfusion.UI.Xaml.Charts.ChartColorPalette");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_ChartBase_Palette;
                xamlMember.Setter = set_91_ChartBase_Palette;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.SeriesSelectedIndex":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SeriesSelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_ChartBase_SeriesSelectedIndex;
                xamlMember.Setter = set_92_ChartBase_SeriesSelectedIndex;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.ColumnDefinitions":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ColumnDefinitions", "Syncfusion.UI.Xaml.Charts.ChartColumnDefinitions");
                xamlMember.Getter = get_93_ChartBase_ColumnDefinitions;
                xamlMember.Setter = set_93_ChartBase_ColumnDefinitions;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.Width":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartColumnDefinition");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_ChartColumnDefinition_Width;
                xamlMember.Setter = set_94_ChartColumnDefinition_Width;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.Unit":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartColumnDefinition");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Unit", "Syncfusion.UI.Xaml.Charts.ChartUnitType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_ChartColumnDefinition_Unit;
                xamlMember.Setter = set_95_ChartColumnDefinition_Unit;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderThickness":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartColumnDefinition");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "BorderThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_ChartColumnDefinition_BorderThickness;
                xamlMember.Setter = set_96_ChartColumnDefinition_BorderThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderStroke":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartColumnDefinition");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "BorderStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_ChartColumnDefinition_BorderStroke;
                xamlMember.Setter = set_97_ChartColumnDefinition_BorderStroke;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.RowDefinitions":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "RowDefinitions", "Syncfusion.UI.Xaml.Charts.ChartRowDefinitions");
                xamlMember.Getter = get_98_ChartBase_RowDefinitions;
                xamlMember.Setter = set_98_ChartBase_RowDefinitions;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartRowDefinition.RowTop":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartRowDefinition");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "RowTop", "Double");
                xamlMember.Getter = get_99_ChartRowDefinition_RowTop;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartRowDefinition.Height":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartRowDefinition");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Height", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_ChartRowDefinition_Height;
                xamlMember.Setter = set_100_ChartRowDefinition_Height;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartRowDefinition.Unit":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartRowDefinition");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Unit", "Syncfusion.UI.Xaml.Charts.ChartUnitType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_ChartRowDefinition_Unit;
                xamlMember.Setter = set_101_ChartRowDefinition_Unit;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderThickness":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartRowDefinition");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "BorderThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_ChartRowDefinition_BorderThickness;
                xamlMember.Setter = set_102_ChartRowDefinition_BorderThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderStroke":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartRowDefinition");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "BorderStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_ChartRowDefinition_BorderStroke;
                xamlMember.Setter = set_103_ChartRowDefinition_BorderStroke;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Axes":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Axes", "Syncfusion.UI.Xaml.Charts.ChartAxisCollection");
                xamlMember.Getter = get_104_ChartBase_Axes;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ActualPlotOffset":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ActualPlotOffset", "Double");
                xamlMember.Getter = get_105_ChartAxis_ActualPlotOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.MaximumLabels":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "MaximumLabels", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_ChartAxis_MaximumLabels;
                xamlMember.Setter = set_106_ChartAxis_MaximumLabels;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.VisibleRange":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "VisibleRange", "Syncfusion.UI.Xaml.Charts.DoubleRange");
                xamlMember.Getter = get_107_ChartAxis_VisibleRange;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderPosition":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "HeaderPosition", "Syncfusion.UI.Xaml.Charts.AxisHeaderPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_ChartAxis_HeaderPosition;
                xamlMember.Setter = set_108_ChartAxis_HeaderPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ArrangeRect":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ArrangeRect", "Windows.Foundation.Rect");
                xamlMember.Getter = get_109_ChartAxis_ArrangeRect;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.PositionPath":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "PositionPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_ChartAxis_PositionPath;
                xamlMember.Setter = set_110_ChartAxis_PositionPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ContentPath":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ContentPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_ChartAxis_ContentPath;
                xamlMember.Setter = set_111_ChartAxis_ContentPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelFormat":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_ChartAxis_LabelFormat;
                xamlMember.Setter = set_112_ChartAxis_LabelFormat;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsSource":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_ChartAxis_LabelsSource;
                xamlMember.Setter = set_113_ChartAxis_LabelsSource;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.PostfixLabelTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "PostfixLabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_ChartAxis_PostfixLabelTemplate;
                xamlMember.Setter = set_114_ChartAxis_PostfixLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.PrefixLabelTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "PrefixLabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_ChartAxis_PrefixLabelTemplate;
                xamlMember.Setter = set_115_ChartAxis_PrefixLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffset":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "PlotOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_ChartAxis_PlotOffset;
                xamlMember.Setter = set_116_ChartAxis_PlotOffset;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineOffset":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "AxisLineOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_ChartAxis_AxisLineOffset;
                xamlMember.Setter = set_117_ChartAxis_AxisLineOffset;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsPosition":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelsPosition", "Syncfusion.UI.Xaml.Charts.AxisElementPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_ChartAxis_LabelsPosition;
                xamlMember.Setter = set_118_ChartAxis_LabelsPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsIntersectAction":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelsIntersectAction", "Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_ChartAxis_LabelsIntersectAction;
                xamlMember.Setter = set_119_ChartAxis_LabelsIntersectAction;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelExtent":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelExtent", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_ChartAxis_LabelExtent;
                xamlMember.Setter = set_120_ChartAxis_LabelExtent;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelRotationAngle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelRotationAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_ChartAxis_LabelRotationAngle;
                xamlMember.Setter = set_121_ChartAxis_LabelRotationAngle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "AxisLineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_ChartAxis_AxisLineStyle;
                xamlMember.Setter = set_122_ChartAxis_AxisLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.OpposedPosition":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "OpposedPosition", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_ChartAxis_OpposedPosition;
                xamlMember.Setter = set_123_ChartAxis_OpposedPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.DesiredIntervalsCount":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "DesiredIntervalsCount", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_ChartAxis_DesiredIntervalsCount;
                xamlMember.Setter = set_124_ChartAxis_DesiredIntervalsCount;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ThumbLabelVisibility":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ThumbLabelVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_ChartAxis_ThumbLabelVisibility;
                xamlMember.Setter = set_125_ChartAxis_ThumbLabelVisibility;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ThumbLabelTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ThumbLabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_ChartAxis_ThumbLabelTemplate;
                xamlMember.Setter = set_126_ChartAxis_ThumbLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.Header":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_ChartAxis_Header;
                xamlMember.Setter = set_127_ChartAxis_Header;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_ChartAxis_HeaderStyle;
                xamlMember.Setter = set_128_ChartAxis_HeaderStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_ChartAxis_HeaderTemplate;
                xamlMember.Setter = set_129_ChartAxis_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.TickLineSize":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "TickLineSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_ChartAxis_TickLineSize;
                xamlMember.Setter = set_130_ChartAxis_TickLineSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.VisibleLabels":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "VisibleLabels", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxisLabel>");
                xamlMember.Getter = get_131_ChartAxis_VisibleLabels;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxisLabel.LabelContent":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxisLabel");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelContent", "Object");
                xamlMember.Getter = get_132_ChartAxisLabel_LabelContent;
                xamlMember.Setter = set_132_ChartAxisLabel_LabelContent;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxisLabel.Position":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxisLabel");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Position", "Double");
                xamlMember.Getter = get_133_ChartAxisLabel_Position;
                xamlMember.Setter = set_133_ChartAxisLabel_Position;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxisLabel.PrefixLabelTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxisLabel");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "PrefixLabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_134_ChartAxisLabel_PrefixLabelTemplate;
                xamlMember.Setter = set_134_ChartAxisLabel_PrefixLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxisLabel.PostfixLabelTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxisLabel");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "PostfixLabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_135_ChartAxisLabel_PostfixLabelTemplate;
                xamlMember.Setter = set_135_ChartAxisLabel_PostfixLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.IsInversed":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "IsInversed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_ChartAxis_IsInversed;
                xamlMember.Setter = set_136_ChartAxis_IsInversed;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.Origin":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Origin", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_ChartAxis_Origin;
                xamlMember.Setter = set_137_ChartAxis_Origin;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ShowOrigin":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ShowOrigin", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_ChartAxis_ShowOrigin;
                xamlMember.Setter = set_138_ChartAxis_ShowOrigin;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.TickLinesPosition":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "TickLinesPosition", "Syncfusion.UI.Xaml.Charts.AxisElementPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_ChartAxis_TickLinesPosition;
                xamlMember.Setter = set_139_ChartAxis_TickLinesPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ShowAxisNextToOrigin":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ShowAxisNextToOrigin", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_ChartAxis_ShowAxisNextToOrigin;
                xamlMember.Setter = set_140_ChartAxis_ShowAxisNextToOrigin;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsDrawingMode":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EdgeLabelsDrawingMode", "Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_ChartAxis_EdgeLabelsDrawingMode;
                xamlMember.Setter = set_141_ChartAxis_EdgeLabelsDrawingMode;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsVisibilityMode":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EdgeLabelsVisibilityMode", "Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_ChartAxis_EdgeLabelsVisibilityMode;
                xamlMember.Setter = set_142_ChartAxis_EdgeLabelsVisibilityMode;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.MajorGridLineStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "MajorGridLineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_ChartAxis_MajorGridLineStyle;
                xamlMember.Setter = set_143_ChartAxis_MajorGridLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.MinorGridLineStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "MinorGridLineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_ChartAxis_MinorGridLineStyle;
                xamlMember.Setter = set_144_ChartAxis_MinorGridLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.MajorTickLineStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "MajorTickLineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_ChartAxis_MajorTickLineStyle;
                xamlMember.Setter = set_145_ChartAxis_MajorTickLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.MinorTickLineStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "MinorTickLineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_ChartAxis_MinorTickLineStyle;
                xamlMember.Setter = set_146_ChartAxis_MinorTickLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.OriginLineStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "OriginLineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_ChartAxis_OriginLineStyle;
                xamlMember.Setter = set_147_ChartAxis_OriginLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ShowTrackBallInfo":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ShowTrackBallInfo", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_ChartAxis_ShowTrackBallInfo;
                xamlMember.Setter = set_148_ChartAxis_ShowTrackBallInfo;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.TrackBallLabelTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "TrackBallLabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_ChartAxis_TrackBallLabelTemplate;
                xamlMember.Setter = set_149_ChartAxis_TrackBallLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.CrosshairLabelTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "CrosshairLabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_150_ChartAxis_CrosshairLabelTemplate;
                xamlMember.Setter = set_150_ChartAxis_CrosshairLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ShowGridLines":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ShowGridLines", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_ChartAxis_ShowGridLines;
                xamlMember.Setter = set_151_ChartAxis_ShowGridLines;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.EnableAutoIntervalOnZooming":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EnableAutoIntervalOnZooming", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_ChartAxis_EnableAutoIntervalOnZooming;
                xamlMember.Setter = set_152_ChartAxis_EnableAutoIntervalOnZooming;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelStyle", "Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_ChartAxis_LabelStyle;
                xamlMember.Setter = set_153_ChartAxis_LabelStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_ChartAxis_LabelTemplate;
                xamlMember.Setter = set_154_ChartAxis_LabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.CustomLabels":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "CustomLabels", "Syncfusion.UI.Xaml.Charts.ChartAxisLabelCollection");
                xamlMember.Getter = get_155_ChartAxis_CustomLabels;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.IsLogarithmic":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "IsLogarithmic", "Boolean");
                xamlMember.Getter = get_156_ChartAxis_IsLogarithmic;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.SideBySideSeriesPlacement":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SideBySideSeriesPlacement", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_157_ChartBase_SideBySideSeriesPlacement;
                xamlMember.Setter = set_157_ChartBase_SideBySideSeriesPlacement;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Header":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_ChartBase_Header;
                xamlMember.Setter = set_158_ChartBase_Header;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.HorizontalHeaderAlignment":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "HorizontalHeaderAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_ChartBase_HorizontalHeaderAlignment;
                xamlMember.Setter = set_159_ChartBase_HorizontalHeaderAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.VerticalHeaderAlignment":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "VerticalHeaderAlignment", "Windows.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_ChartBase_VerticalHeaderAlignment;
                xamlMember.Setter = set_160_ChartBase_VerticalHeaderAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.ColorModel":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ColorModel", "Syncfusion.UI.Xaml.Charts.ChartColorModel");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_161_ChartBase_ColorModel;
                xamlMember.Setter = set_161_ChartBase_ColorModel;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Legend":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Legend", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_162_ChartBase_Legend;
                xamlMember.Setter = set_162_ChartBase_Legend;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Row":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Row", "Int32");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_163_ChartBase_Row;
                xamlMember.Setter = set_163_ChartBase_Row;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Column":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Column", "Int32");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_164_ChartBase_Column;
                xamlMember.Setter = set_164_ChartBase_Column;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.ColumnSpan":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ColumnSpan", "Int32");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_165_ChartBase_ColumnSpan;
                xamlMember.Setter = set_165_ChartBase_ColumnSpan;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.RowSpan":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "RowSpan", "Int32");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_166_ChartBase_RowSpan;
                xamlMember.Setter = set_166_ChartBase_RowSpan;
                break;
            case "Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.YBindingPath":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "YBindingPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_AccumulationSeriesBase_YBindingPath;
                xamlMember.Setter = set_167_AccumulationSeriesBase_YBindingPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ConnectorType":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CircularSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ConnectorType", "Syncfusion.UI.Xaml.Charts.ConnectorMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_CircularSeriesBase_ConnectorType;
                xamlMember.Setter = set_168_CircularSeriesBase_ConnectorType;
                break;
            case "Syncfusion.UI.Xaml.Charts.CircularSeriesBase.EnableSmartLabels":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CircularSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EnableSmartLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_CircularSeriesBase_EnableSmartLabels;
                xamlMember.Setter = set_169_CircularSeriesBase_EnableSmartLabels;
                break;
            case "Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SelectedIndex":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_AccumulationSeriesBase_SelectedIndex;
                xamlMember.Setter = set_170_AccumulationSeriesBase_SelectedIndex;
                break;
            case "Syncfusion.UI.Xaml.Charts.CircularSeriesBase.LabelPosition":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CircularSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelPosition", "Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_CircularSeriesBase_LabelPosition;
                xamlMember.Setter = set_171_CircularSeriesBase_LabelPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeAll":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ExplodeAll", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_172_AccumulationSeriesBase_ExplodeAll;
                xamlMember.Setter = set_172_AccumulationSeriesBase_ExplodeAll;
                break;
            case "Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ExplodeRadius":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CircularSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ExplodeRadius", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_173_CircularSeriesBase_ExplodeRadius;
                xamlMember.Setter = set_173_CircularSeriesBase_ExplodeRadius;
                break;
            case "Syncfusion.UI.Xaml.Charts.AdornmentSeries.AdornmentsInfo":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.AdornmentSeries");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "AdornmentsInfo", "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_174_AdornmentSeries_AdornmentsInfo;
                xamlMember.Setter = set_174_AdornmentSeries_AdornmentsInfo;
                break;
            case "Syncfusion.UI.Xaml.Charts.PieSeries.Segment":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.PieSeries");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Segment", "Syncfusion.UI.Xaml.Charts.PieSegment");
                xamlMember.Getter = get_175_PieSeries_Segment;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.PieSeries.PieCoefficient":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.PieSeries");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "PieCoefficient", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_176_PieSeries_PieCoefficient;
                xamlMember.Setter = set_176_PieSeries_PieCoefficient;
                break;
            case "Syncfusion.UI.Xaml.Charts.CircularSeriesBase.StartAngle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CircularSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "StartAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_177_CircularSeriesBase_StartAngle;
                xamlMember.Setter = set_177_CircularSeriesBase_StartAngle;
                break;
            case "Syncfusion.UI.Xaml.Charts.CircularSeriesBase.EndAngle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CircularSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EndAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_178_CircularSeriesBase_EndAngle;
                xamlMember.Setter = set_178_CircularSeriesBase_EndAngle;
                break;
            case "Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeIndex":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ExplodeIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_179_AccumulationSeriesBase_ExplodeIndex;
                xamlMember.Setter = set_179_AccumulationSeriesBase_ExplodeIndex;
                break;
            case "Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeOnMouseClick":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ExplodeOnMouseClick", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_180_AccumulationSeriesBase_ExplodeOnMouseClick;
                xamlMember.Setter = set_180_AccumulationSeriesBase_ExplodeOnMouseClick;
                break;
            case "Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SegmentSelectionBrush":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SegmentSelectionBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_181_AccumulationSeriesBase_SegmentSelectionBrush;
                xamlMember.Setter = set_181_AccumulationSeriesBase_SegmentSelectionBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelRotationAngle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelRotationAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_182_ChartAdornmentInfoBase_LabelRotationAngle;
                xamlMember.Setter = set_182_ChartAdornmentInfoBase_LabelRotationAngle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Background":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Background", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_183_ChartAdornmentInfoBase_Background;
                xamlMember.Setter = set_183_ChartAdornmentInfoBase_Background;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.BorderThickness":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "BorderThickness", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_184_ChartAdornmentInfoBase_BorderThickness;
                xamlMember.Setter = set_184_ChartAdornmentInfoBase_BorderThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.BorderBrush":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "BorderBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_185_ChartAdornmentInfoBase_BorderBrush;
                xamlMember.Setter = set_185_ChartAdornmentInfoBase_BorderBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Margin":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Margin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_186_ChartAdornmentInfoBase_Margin;
                xamlMember.Setter = set_186_ChartAdornmentInfoBase_Margin;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_187_ChartAdornmentInfoBase_FontStyle;
                xamlMember.Setter = set_187_ChartAdornmentInfoBase_FontStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontSize":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_188_ChartAdornmentInfoBase_FontSize;
                xamlMember.Setter = set_188_ChartAdornmentInfoBase_FontSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Foreground":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_189_ChartAdornmentInfoBase_Foreground;
                xamlMember.Setter = set_189_ChartAdornmentInfoBase_Foreground;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.UseSeriesPalette":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "UseSeriesPalette", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_190_ChartAdornmentInfoBase_UseSeriesPalette;
                xamlMember.Setter = set_190_ChartAdornmentInfoBase_UseSeriesPalette;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelPosition":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelPosition", "Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_191_ChartAdornmentInfoBase_LabelPosition;
                xamlMember.Setter = set_191_ChartAdornmentInfoBase_LabelPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HighlightOnSelection":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "HighlightOnSelection", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_192_ChartAdornmentInfoBase_HighlightOnSelection;
                xamlMember.Setter = set_192_ChartAdornmentInfoBase_HighlightOnSelection;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HorizontalAlignment":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "HorizontalAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_193_ChartAdornmentInfoBase_HorizontalAlignment;
                xamlMember.Setter = set_193_ChartAdornmentInfoBase_HorizontalAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.VerticalAlignment":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "VerticalAlignment", "Windows.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_194_ChartAdornmentInfoBase_VerticalAlignment;
                xamlMember.Setter = set_194_ChartAdornmentInfoBase_VerticalAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorHeight":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ConnectorHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_195_ChartAdornmentInfoBase_ConnectorHeight;
                xamlMember.Setter = set_195_ChartAdornmentInfoBase_ConnectorHeight;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorRotationAngle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ConnectorRotationAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_196_ChartAdornmentInfoBase_ConnectorRotationAngle;
                xamlMember.Setter = set_196_ChartAdornmentInfoBase_ConnectorRotationAngle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorLineStyle":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ConnectorLineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_197_ChartAdornmentInfoBase_ConnectorLineStyle;
                xamlMember.Setter = set_197_ChartAdornmentInfoBase_ConnectorLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowConnectorLine":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ShowConnectorLine", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_198_ChartAdornmentInfoBase_ShowConnectorLine;
                xamlMember.Setter = set_198_ChartAdornmentInfoBase_ShowConnectorLine;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_199_ChartAdornmentInfoBase_LabelTemplate;
                xamlMember.Setter = set_199_ChartAdornmentInfoBase_LabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Symbol":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Symbol", "Syncfusion.UI.Xaml.Charts.ChartSymbol");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_200_ChartAdornmentInfoBase_Symbol;
                xamlMember.Setter = set_200_ChartAdornmentInfoBase_Symbol;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolWidth":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SymbolWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_201_ChartAdornmentInfoBase_SymbolWidth;
                xamlMember.Setter = set_201_ChartAdornmentInfoBase_SymbolWidth;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolHeight":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SymbolHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_202_ChartAdornmentInfoBase_SymbolHeight;
                xamlMember.Setter = set_202_ChartAdornmentInfoBase_SymbolHeight;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SymbolTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_203_ChartAdornmentInfoBase_SymbolTemplate;
                xamlMember.Setter = set_203_ChartAdornmentInfoBase_SymbolTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolInterior":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SymbolInterior", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_204_ChartAdornmentInfoBase_SymbolInterior;
                xamlMember.Setter = set_204_ChartAdornmentInfoBase_SymbolInterior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolStroke":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SymbolStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_205_ChartAdornmentInfoBase_SymbolStroke;
                xamlMember.Setter = set_205_ChartAdornmentInfoBase_SymbolStroke;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontFamily":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_206_ChartAdornmentInfoBase_FontFamily;
                xamlMember.Setter = set_206_ChartAdornmentInfoBase_FontFamily;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Series":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Series", "Syncfusion.UI.Xaml.Charts.ChartSeriesBase");
                xamlMember.Getter = get_207_ChartAdornmentInfoBase_Series;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.AdornmentsPosition":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "AdornmentsPosition", "Syncfusion.UI.Xaml.Charts.AdornmentsPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_208_ChartAdornmentInfoBase_AdornmentsPosition;
                xamlMember.Setter = set_208_ChartAdornmentInfoBase_AdornmentsPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelContent":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SegmentLabelContent", "Syncfusion.UI.Xaml.Charts.LabelContent");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_209_ChartAdornmentInfoBase_SegmentLabelContent;
                xamlMember.Setter = set_209_ChartAdornmentInfoBase_SegmentLabelContent;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelFormat":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "SegmentLabelFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_210_ChartAdornmentInfoBase_SegmentLabelFormat;
                xamlMember.Setter = set_210_ChartAdornmentInfoBase_SegmentLabelFormat;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowMarker":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ShowMarker", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_211_ChartAdornmentInfoBase_ShowMarker;
                xamlMember.Setter = set_211_ChartAdornmentInfoBase_ShowMarker;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowLabel":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ShowLabel", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_212_ChartAdornmentInfoBase_ShowLabel;
                xamlMember.Setter = set_212_ChartAdornmentInfoBase_ShowLabel;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartColorModel.CustomBrushes":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartColorModel");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "CustomBrushes", "System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>");
                xamlMember.Getter = get_213_ChartColorModel_CustomBrushes;
                xamlMember.Setter = set_213_ChartColorModel_CustomBrushes;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.LegendPosition":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "LegendPosition", "Syncfusion.UI.Xaml.Charts.LegendPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_214_ChartLegend_LegendPosition;
                xamlMember.Setter = set_214_ChartLegend_LegendPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.Orientation":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Orientation", "Syncfusion.UI.Xaml.Charts.ChartOrientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_215_ChartLegend_Orientation;
                xamlMember.Setter = set_215_ChartLegend_Orientation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.DockPosition":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "DockPosition", "Syncfusion.UI.Xaml.Charts.ChartDock");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_216_ChartLegend_DockPosition;
                xamlMember.Setter = set_216_ChartLegend_DockPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.ItemMargin":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ItemMargin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_217_ChartLegend_ItemMargin;
                xamlMember.Setter = set_217_ChartLegend_ItemMargin;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.Header":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_218_ChartLegend_Header;
                xamlMember.Setter = set_218_ChartLegend_Header;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.HeaderTemplate":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_219_ChartLegend_HeaderTemplate;
                xamlMember.Setter = set_219_ChartLegend_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.CornerRadius":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "CornerRadius", "Windows.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_220_ChartLegend_CornerRadius;
                xamlMember.Setter = set_220_ChartLegend_CornerRadius;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.CheckBoxVisibility":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "CheckBoxVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_221_ChartLegend_CheckBoxVisibility;
                xamlMember.Setter = set_221_ChartLegend_CheckBoxVisibility;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.IconVisibility":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "IconVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_222_ChartLegend_IconVisibility;
                xamlMember.Setter = set_222_ChartLegend_IconVisibility;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.IconWidth":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "IconWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_223_ChartLegend_IconWidth;
                xamlMember.Setter = set_223_ChartLegend_IconWidth;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.IconHeight":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "IconHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_224_ChartLegend_IconHeight;
                xamlMember.Setter = set_224_ChartLegend_IconHeight;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetX":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "OffsetX", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_225_ChartLegend_OffsetX;
                xamlMember.Setter = set_225_ChartLegend_OffsetX;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetY":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "OffsetY", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_226_ChartLegend_OffsetY;
                xamlMember.Setter = set_226_ChartLegend_OffsetY;
                break;
            case "WinRTXamlToolkit.Controls.WrapPanel.Orientation":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.WrapPanel");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "Orientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_227_WrapPanel_Orientation;
                xamlMember.Setter = set_227_WrapPanel_Orientation;
                break;
            case "WinRTXamlToolkit.Controls.WrapPanel.ItemHeight":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.WrapPanel");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ItemHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_228_WrapPanel_ItemHeight;
                xamlMember.Setter = set_228_WrapPanel_ItemHeight;
                break;
            case "WinRTXamlToolkit.Controls.WrapPanel.ItemWidth":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.WrapPanel");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ItemWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_229_WrapPanel_ItemWidth;
                xamlMember.Setter = set_229_WrapPanel_ItemWidth;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartTooltip.EnableAnimation":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartTooltip");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "EnableAnimation", "Boolean");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_230_ChartTooltip_EnableAnimation;
                xamlMember.Setter = set_230_ChartTooltip_EnableAnimation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartTooltip.HorizontalAlignment":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartTooltip");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "HorizontalAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_231_ChartTooltip_HorizontalAlignment;
                xamlMember.Setter = set_231_ChartTooltip_HorizontalAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartTooltip.VerticalAlignment":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartTooltip");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "VerticalAlignment", "Windows.UI.Xaml.VerticalAlignment");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_232_ChartTooltip_VerticalAlignment;
                xamlMember.Setter = set_232_ChartTooltip_VerticalAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartTooltip.TooltipMargin":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartTooltip");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "TooltipMargin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_233_ChartTooltip_TooltipMargin;
                xamlMember.Setter = set_233_ChartTooltip_TooltipMargin;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartTooltip.ShowDuration":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartTooltip");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ShowDuration", "Int32");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_234_ChartTooltip_ShowDuration;
                xamlMember.Setter = set_234_ChartTooltip_ShowDuration;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartTooltip.InitialShowDelay":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartTooltip");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "InitialShowDelay", "Int32");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_235_ChartTooltip_InitialShowDelay;
                xamlMember.Setter = set_235_ChartTooltip_InitialShowDelay;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartTooltip.HorizontalOffset":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartTooltip");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Double");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_236_ChartTooltip_HorizontalOffset;
                xamlMember.Setter = set_236_ChartTooltip_HorizontalOffset;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartTooltip.VerticalOffset":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartTooltip");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Double");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_237_ChartTooltip_VerticalOffset;
                xamlMember.Setter = set_237_ChartTooltip_VerticalOffset;
                break;
            case "BalanceSheet.Controls.PageHeader.HeaderContent":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BalanceSheet.Controls.PageHeader");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "HeaderContent", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_238_PageHeader_HeaderContent;
                xamlMember.Setter = set_238_PageHeader_HeaderContent;
                break;
            case "Windows.UI.Color.A":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_239_Color_A;
                xamlMember.Setter = set_239_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_240_Color_B;
                xamlMember.Setter = set_240_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_241_Color_G;
                xamlMember.Setter = set_241_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_242_Color_R;
                xamlMember.Setter = set_242_Color_R;
                break;
            case "BalanceSheet.Views.AppShell.TogglePaneButtonRect":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BalanceSheet.Views.AppShell");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "TogglePaneButtonRect", "Windows.Foundation.Rect");
                xamlMember.Getter = get_243_AppShell_TogglePaneButtonRect;
                xamlMember.SetIsReadOnly();
                break;
            case "BalanceSheet.Views.AppShell.AppFrame":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BalanceSheet.Views.AppShell");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "AppFrame", "Windows.UI.Xaml.Controls.Frame");
                xamlMember.Getter = get_244_AppShell_AppFrame;
                xamlMember.SetIsReadOnly();
                break;
            case "BalanceSheet.Views.SignInPage.ViewModel":
                userType = (global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BalanceSheet.Views.SignInPage");
                xamlMember = new global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlMember(this, "ViewModel", "BalanceSheet.ViewModels.SignInViewModel");
                xamlMember.Getter = get_245_SignInPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlSystemBaseType
    {
        global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::BalanceSheet.BalanceSheet_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

